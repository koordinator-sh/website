"use strict";(self.webpackChunkkoordinator_sh=self.webpackChunkkoordinator_sh||[]).push([[3497],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=u(n),m=o,k=d["".concat(s,".").concat(m)]||d[m]||c[m]||i;return n?r.createElement(k,a(a({ref:t},p),{},{components:n})):r.createElement(k,a({ref:t},p))}));function k(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:o,a[1]=l;for(var u=2;u<i;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6778:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var r=n(7462),o=(n(7294),n(3905));const i={},a="Extensibility",l={unversionedId:"developer-guide/extensibility",id:"developer-guide/extensibility",title:"Extensibility",description:"Introduction",source:"@site/docs/developer-guide/extensibility.md",sourceDirName:"developer-guide",slug:"/developer-guide/extensibility",permalink:"/docs/next/developer-guide/extensibility",draft:!1,editUrl:"https://github.com/koordinator-sh/koordinator.sh/edit/main/docs/developer-guide/extensibility.md",tags:[],version:"current",lastUpdatedBy:"\u4e54\u666e",lastUpdatedAt:1760692701,formattedLastUpdatedAt:"Oct 17, 2025",frontMatter:{},sidebar:"docs",previous:{title:"Metrics Collection",permalink:"/docs/next/developer-guide/metrics-collection"},next:{title:"Developing Custom Scheduler Plugin",permalink:"/docs/next/developer-guide/plugin-development"}},s={},u=[{value:"Introduction",id:"introduction",level:2},{value:"Plugin Architecture and Registration",id:"plugin-architecture-and-registration",level:2},{value:"Scheduling Framework Extension Points",id:"scheduling-framework-extension-points",level:2},{value:"Transformer Extension Points",id:"transformer-extension-points",level:3},{value:"Reservation Management Extension Points",id:"reservation-management-extension-points",level:3},{value:"Webhook Extension System",id:"webhook-extension-system",level:2},{value:"Webhook Architecture",id:"webhook-architecture",level:3},{value:"Cluster Colocation Profile Webhook",id:"cluster-colocation-profile-webhook",level:3},{value:"QoS Enforcement and Policy Plugins",id:"qos-enforcement-and-policy-plugins",level:2},{value:"QoS Policy Application Flow",id:"qos-policy-application-flow",level:3},{value:"Development and Testing Guidelines",id:"development-and-testing-guidelines",level:2},{value:"Troubleshooting Plugin Development",id:"troubleshooting-plugin-development",level:2},{value:"Diagnostic Tools",id:"diagnostic-tools",level:3}],p={toc:u},d="wrapper";function c(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"extensibility"},"Extensibility"),(0,o.kt)("h2",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"Koordinator provides a comprehensive extensibility framework for custom policies and QoS enforcement through scheduling plugins, webhook admission controllers, and runtime hooks. This document details plugin development, extension point architecture, and practical implementation for custom scheduling policies and QoS strategies."),(0,o.kt)("h2",{id:"plugin-architecture-and-registration"},"Plugin Architecture and Registration"),(0,o.kt)("p",null,"Koordinator's plugin architecture builds on an enhanced Kubernetes scheduling framework with additional extension points while maintaining compatibility. Uses a factory pattern for plugin registration that intercepts initialization to inject extended functionality."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Framework Extender Class Structure:")),(0,o.kt)("p",null,"Core components and relationships:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"FrameworkExtender")," (Framework extender interface)"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Methods: ",(0,o.kt)("inlineCode",{parentName:"li"},"SetConfiguredPlugins()"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"RunReservationExtensionPreRestoreReservation()"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"RunReservationExtensionRestoreReservation()"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"RunReservationScorePlugins()"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"RunReservationFilterPlugins()"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"RunNUMATopologyManagerAdmit()"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"RunAllocatePlugins()")),(0,o.kt)("li",{parentName:"ul"},"Contains ExtendedHandle"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"ExtendedHandle")," (Extended handle interface)"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Methods: ",(0,o.kt)("inlineCode",{parentName:"li"},"Scheduler()"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"KoordinatorClientSet()"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"KoordinatorSharedInformerFactory()"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"RegisterErrorHandlerFilters()"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"RegisterForgetPodHandler()"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"GetReservationNominator()"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"GetNetworkTopologyTreeManager()")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"FrameworkExtenderFactory")," (Framework extender factory)"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Methods: ",(0,o.kt)("inlineCode",{parentName:"li"},"NewFrameworkExtender()"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"GetExtender()"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"InitScheduler()"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"PluginFactoryProxy()"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"updatePlugins()")),(0,o.kt)("li",{parentName:"ul"},"Creates frameworkExtenderImpl"),(0,o.kt)("li",{parentName:"ul"},"Uses PluginFactoryProxy")))),(0,o.kt)("p",null,"Relationships:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"frameworkExtenderImpl implements FrameworkExtender and ExtendedHandle interfaces"),(0,o.kt)("li",{parentName:"ul"},"FrameworkExtenderFactory creates and manages frameworkExtenderImpl")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Diagram sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/scheduler/frameworkext/framework_extender.go"},"framework_extender.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/scheduler/frameworkext/framework_extender_factory.go"},"framework_extender_factory.go"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Section sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/scheduler/frameworkext/framework_extender.go"},"framework_extender.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/scheduler/frameworkext/framework_extender_factory.go"},"framework_extender_factory.go"))),(0,o.kt)("h2",{id:"scheduling-framework-extension-points"},"Scheduling Framework Extension Points"),(0,o.kt)("p",null,"The enhanced framework provides extension points for plugins to participate in scheduling at various stages. Extension points include transformer interfaces that modify scheduling objects before core operations, reservation-specific plugins for resource reservations, and specialized scoring/filtering mechanisms."),(0,o.kt)("h3",{id:"transformer-extension-points"},"Transformer Extension Points"),(0,o.kt)("p",null,"Transformer plugins modify scheduling objects (Pods and NodeInfo) before core operations at specific cycle phases:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"BeforePreFilter \u2192 Core PreFilter \u2192 AfterPreFilter"),(0,o.kt)("li",{parentName:"ul"},"BeforeFilter \u2192 Core Filter"),(0,o.kt)("li",{parentName:"ul"},"BeforeScore \u2192 Core Score"),(0,o.kt)("li",{parentName:"ul"},"AllocatePlugins (at Reserve phase)"),(0,o.kt)("li",{parentName:"ul"},"Bind Phase")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Transformer Extension Point Execution Flow:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Scheduling Cycle Phases:\n\n1. Scheduling Cycle Start\n   \u2193\n2. PreFilter Phase\n   \u251c\u2500 BeforePreFilter Transformers\n   \u251c\u2500 Core PreFilter Plugins\n   \u2514\u2500 AfterPreFilter Transformers\n   \u2193\n3. Filter Phase\n   \u251c\u2500 BeforeFilter Transformers\n   \u2514\u2500 Core Filter Plugins\n   \u2193\n4. Score Phase\n   \u251c\u2500 BeforeScore Transformers\n   \u2514\u2500 Core Score Plugins\n   \u2193\n5. Reserve Phase\n   \u2514\u2500 Allocate Plugins\n   \u2193\n6. Bind Phase\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Section sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/scheduler/frameworkext/interface.go"},"interface.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/scheduler/frameworkext/framework_extender.go"},"framework_extender.go"))),(0,o.kt)("h3",{id:"reservation-management-extension-points"},"Reservation Management Extension Points"),(0,o.kt)("p",null,"Koordinator provides specialized extension points for reservation-based scheduling:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"RunReservationExtensionPreRestoreReservation"),(0,o.kt)("li",{parentName:"ol"},"RestoreReservation (matched/unmatched)"),(0,o.kt)("li",{parentName:"ol"},"RunReservationFilterPlugins"),(0,o.kt)("li",{parentName:"ol"},"RunReservationScorePlugins"),(0,o.kt)("li",{parentName:"ol"},"NominateReservation")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Reservation Management Extension Point Interaction Flow:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Participants:\n- Pod to Schedule (pod to be scheduled)\n- FrameworkExtender (framework extender)\n- Reservation Plugin (reservation plugin)\n\nFlow:\n\n1. Pod \u2192 FrameworkExtender: Schedule Request\n\n2. FrameworkExtender: Execute RunReservationExtensionPreRestoreReservation\n\n3. FrameworkExtender \u2192 ReservationPlugin: RestoreReservation(matched/unmatched)\n\n4. ReservationPlugin \u2192 FrameworkExtender: Return PluginToReservationRestoreStates\n\n5. FrameworkExtender: Execute RunReservationFilterPlugins\n\n6. FrameworkExtender \u2192 ReservationPlugin: FilterReservation\n\n7. ReservationPlugin \u2192 FrameworkExtender: Return Filter Status\n\n8. FrameworkExtender: Execute RunReservationScorePlugins\n\n9. FrameworkExtender \u2192 ReservationPlugin: ScoreReservation\n\n10. ReservationPlugin \u2192 FrameworkExtender: Return Reservation Scores\n\n11. FrameworkExtender: Execute NominateReservation\n\n12. FrameworkExtender \u2192 Pod: Return Selected Node and Reservation\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Diagram sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/scheduler/frameworkext/interface.go"},"interface.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/scheduler/frameworkext/framework_extender.go"},"framework_extender.go"))),(0,o.kt)("h2",{id:"webhook-extension-system"},"Webhook Extension System"),(0,o.kt)("p",null,"Koordinator's webhook system provides admission control through mutating and validating webhooks, built on controller-runtime with feature-gated functionality."),(0,o.kt)("h3",{id:"webhook-architecture"},"Webhook Architecture"),(0,o.kt)("p",null,"The webhook server architecture follows a modular design with centralized registration and feature-based activation:"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Webhook Server Architecture:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"API Server\n  \u2193 (requests)\nWebhook Server\n  \u251c\u2500\u2500 Handler Registry\n  \u2502   \u251c\u2500\u2500 Pod Webhooks\n  \u2502   \u251c\u2500\u2500 Node Webhooks\n  \u2502   \u2514\u2500\u2500 Reservation Webhooks\n  \u2514\u2500\u2500 Health Checker\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Diagram sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/server.go"},"server.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/util/controller/webhook_controller.go"},"webhook_controller.go"))),(0,o.kt)("h3",{id:"cluster-colocation-profile-webhook"},"Cluster Colocation Profile Webhook"),(0,o.kt)("p",null,"The cluster colocation profile webhook demonstrates mutation logic applying QoS policies and resource configurations based on matching criteria. Workflow:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Load ClusterColocationProfiles"),(0,o.kt)("li",{parentName:"ol"},"Match Profiles to Pod"),(0,o.kt)("li",{parentName:"ol"},"Sort Profiles by Name (if matched)"),(0,o.kt)("li",{parentName:"ol"},"Apply Mutations from Profiles"),(0,o.kt)("li",{parentName:"ol"},"Handle Resource Specifications")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Cluster Colocation Profile Webhook Processing Flow:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"1. Admission Request\n   \u2193\n2. Load ClusterColocationProfiles\n   \u2193\n3. Match Profiles to Pod\n   \u2193\n4. Profiles Matched?\n   \u251c\u2500 No \u2192 Allow Request\n   \u2514\u2500 Yes \u2192 Continue\n   \u2193\n5. Sort Profiles by Name\n   \u2193\n6. Apply Mutations from Profiles\n   \u2193\n7. Handle Resource Specifications\n   \u2193\n8. Complete Request\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Section sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/pod/mutating/cluster_colocation_profile.go"},"cluster_colocation_profile.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/add_pod.go"},"add_pod.go"))),(0,o.kt)("h2",{id:"qos-enforcement-and-policy-plugins"},"QoS Enforcement and Policy Plugins"),(0,o.kt)("p",null,"Koordinator's QoS enforcement combines webhook mutations and scheduling framework plugins. The system applies QoS policies at admission time and enforces them during scheduling."),(0,o.kt)("h3",{id:"qos-policy-application-flow"},"QoS Policy Application Flow"),(0,o.kt)("p",null,"The QoS policy application follows a multi-stage process that begins with webhook mutation and continues through the scheduling pipeline:"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"QoS Policy Application Flow:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Participants:\n- User\n- API Server\n- Koordinator Webhook\n- Koordinator Scheduler\n\nFlow:\n\n1. User \u2192 API Server: Create Pod\n\n2. API Server \u2192 Koordinator Webhook: Admission Review\n\n3. Koordinator Webhook internal processing:\n   - Match ClusterColocationProfiles\n   - Apply QoS Labels and Annotations\n   - Transform Resource Specifications\n\n4. Koordinator Webhook \u2192 API Server: Patch Operations\n\n5. API Server internal: Apply Patches\n\n6. API Server \u2192 Koordinator Scheduler: Schedule Pod\n\n7. Koordinator Scheduler internal processing:\n   - Apply QoS-aware Scheduling\n   - Enforce Resource Isolation\n\n8. Koordinator Scheduler \u2192 User: Pod Scheduled\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Section sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/pod/mutating/cluster_colocation_profile.go"},"cluster_colocation_profile.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/scheduler/frameworkext/framework_extender.go"},"framework_extender.go"))),(0,o.kt)("h2",{id:"development-and-testing-guidelines"},"Development and Testing Guidelines"),(0,o.kt)("p",null,"Developing custom plugins requires understanding plugin registration, extension interfaces, and testing methodologies."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Plugin Development Process"),":"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Define Plugin Interface: Implement appropriate extension interfaces"),(0,o.kt)("li",{parentName:"ol"},"Register Plugin: Use PluginFactoryProxy mechanism"),(0,o.kt)("li",{parentName:"ol"},"Implement Business Logic: Develop core functionality"),(0,o.kt)("li",{parentName:"ol"},"Handle Configuration: Support configuration through plugin arguments"),(0,o.kt)("li",{parentName:"ol"},"Implement Testing: Create unit and integration tests")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Testing Strategies"),": Multiple approaches required:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Unit Testing"),": Mock dependencies for plugin business logic"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Integration Testing"),": Test with real components for framework integration"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"End-to-End Testing"),": Validate system behavior in cluster")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Plugin Testing Strategy Levels:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Testing Levels:\n\n1. Unit Testing\n   - Uses Mocks\n   - Tests Plugin Business Logic\n\n2. Integration Testing\n   - Uses Real Components\n   - Tests Framework Integration\n\n3. End-to-End Testing\n   - Uses Cluster Environment\n   - Tests System Behavior\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Section sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/scheduler/frameworkext/framework_extender_factory.go"},"framework_extender_factory.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/scheduler/frameworkext/interface.go"},"interface.go"))),(0,o.kt)("h2",{id:"troubleshooting-plugin-development"},"Troubleshooting Plugin Development"),(0,o.kt)("p",null,"Common issues when developing Koordinator plugins:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Issue"),(0,o.kt)("th",{parentName:"tr",align:null},"Symptoms"),(0,o.kt)("th",{parentName:"tr",align:null},"Resolution"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Plugin Not Registered"),(0,o.kt)("td",{parentName:"tr",align:null},"Logic not executed"),(0,o.kt)("td",{parentName:"tr",align:null},"Verify PluginFactoryProxy registration and feature gates")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Configuration Problems"),(0,o.kt)("td",{parentName:"tr",align:null},"Initialization failure"),(0,o.kt)("td",{parentName:"tr",align:null},"Check plugin arguments and configuration schema")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Extension Point Not Triggered"),(0,o.kt)("td",{parentName:"tr",align:null},"Expected logic not executed"),(0,o.kt)("td",{parentName:"tr",align:null},"Verify plugin enabled in scheduler configuration")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Performance Issues"),(0,o.kt)("td",{parentName:"tr",align:null},"Increased scheduling latency"),(0,o.kt)("td",{parentName:"tr",align:null},"Optimize plugin logic, consider async operations")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Compatibility Problems"),(0,o.kt)("td",{parentName:"tr",align:null},"Conflicts with other plugins"),(0,o.kt)("td",{parentName:"tr",align:null},"Review plugin ordering and dependencies")))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Diagnostic Tools"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Debug Flags: Enable debug output for filter/score results"),(0,o.kt)("li",{parentName:"ul"},"Metrics Collection: Monitor plugin execution duration and success rates"),(0,o.kt)("li",{parentName:"ul"},"Log Analysis: Examine detailed logs for execution flow"),(0,o.kt)("li",{parentName:"ul"},"API Inspection: Use exposed REST APIs to inspect scheduler state\n| Plugin Not Registered | Plugin logic not executed | Verify PluginFactoryProxy registration and feature gate settings |\n| Configuration Problems | Plugin fails to initialize | Check plugin arguments and configuration schema |\n| Extension Point Not Triggered | Expected logic not executed | Verify plugin is enabled in the scheduler configuration |\n| Performance Issues | Scheduling latency increased | Optimize plugin logic and consider asynchronous operations |\n| Compatibility Problems | Conflicts with other plugins | Review plugin ordering and dependencies |")),(0,o.kt)("h3",{id:"diagnostic-tools"},"Diagnostic Tools"),(0,o.kt)("p",null,"Koordinator provides several diagnostic tools for troubleshooting plugin issues:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Debug Flags"),": Enable debug output for filter and score results"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Metrics Collection"),": Monitor plugin execution duration and success rates"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Log Analysis"),": Examine detailed logs for plugin execution flow"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"API Inspection"),": Use the exposed REST APIs to inspect internal scheduler state")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Section sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/scheduler/frameworkext/framework_extender.go"},"framework_extender.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/server.go"},"server.go"))))}c.isMDXComponent=!0}}]);