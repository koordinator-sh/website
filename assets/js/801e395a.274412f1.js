"use strict";(self.webpackChunkkoordinator_sh=self.webpackChunkkoordinator_sh||[]).push([[3801],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>u});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(n),h=o,u=m["".concat(s,".").concat(h)]||m[h]||d[h]||i;return n?r.createElement(u,a(a({ref:t},p),{},{components:n})):r.createElement(u,a({ref:t},p))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},48321:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(87462),o=(n(67294),n(3905));const i={},a="Client Libraries",l={unversionedId:"api-reference/client-libraries",id:"version-v1.7/api-reference/client-libraries",title:"Client Libraries",description:"Introduction",source:"@site/versioned_docs/version-v1.7/api-reference/client-libraries.md",sourceDirName:"api-reference",slug:"/api-reference/client-libraries",permalink:"/docs/api-reference/client-libraries",draft:!1,editUrl:"https://github.com/koordinator-sh/koordinator.sh/edit/main/docs/api-reference/client-libraries.md",tags:[],version:"v1.7",lastUpdatedBy:"\u4e54\u666e",lastUpdatedAt:1761882390,formattedLastUpdatedAt:"Oct 31, 2025",frontMatter:{},sidebar:"docs",previous:{title:"Custom Resource Definitions",permalink:"/docs/api-reference/custom-resource-definitions"},next:{title:"Metrics Endpoints",permalink:"/docs/api-reference/metrics-endpoints"}},s={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Clientset Architecture",id:"clientset-architecture",level:2},{value:"CRUD Operations with Typed Clients",id:"crud-operations-with-typed-clients",level:2},{value:"Informer Pattern Implementation",id:"informer-pattern-implementation",level:2},{value:"Lister Interfaces for Cache Queries",id:"lister-interfaces-for-cache-queries",level:2},{value:"Shared Informer Management",id:"shared-informer-management",level:2},{value:"Delegation, Rate Limiting, and Retry Mechanisms",id:"delegation-rate-limiting-and-retry-mechanisms",level:2},{value:"DeepCopy Methods and Thread Safety",id:"deepcopy-methods-and-thread-safety",level:2},{value:"Integration with controller-runtime",id:"integration-with-controller-runtime",level:2},{value:"Best Practices and Common Patterns",id:"best-practices-and-common-patterns",level:2}],p={toc:c},m="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(m,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"client-libraries"},"Client Libraries"),(0,o.kt)("h2",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"This document provides comprehensive documentation for Koordinator's Go client libraries, which enable programmatic interaction with Koordinator's custom resources. The client libraries support standard Kubernetes-style operations for creating, reading, updating, and deleting Custom Resource Definitions (CRDs), including Recommendations, Reservations, and NodeMetrics. The architecture leverages Kubernetes client-go patterns with specialized extensions for efficient event-driven programming through informers and cache synchronization. This documentation covers the full spectrum of client functionality, from basic CRUD operations to advanced patterns involving shared informers, listers, and integration with controller-runtime for building custom controllers."),(0,o.kt)("h2",{id:"clientset-architecture"},"Clientset Architecture"),(0,o.kt)("p",null,"The Koordinator clientset provides a unified interface for accessing all Koordinator custom resources through versioned API groups. The architecture follows Kubernetes client-go conventions with typed clients for each API group."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Clientset Architecture Diagram:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Core Classes:\n\n1. Clientset\n   Fields:\n   - *discovery.DiscoveryClient\n   - analysisV1alpha1: *AnalysisV1alpha1Client\n   - configV1alpha1: *ConfigV1alpha1Client\n   - quotaV1alpha1: *QuotaV1alpha1Client\n   - schedulingV1alpha1: *SchedulingV1alpha1Client\n   - sloV1alpha1: *SloV1alpha1Client\n\n2. AnalysisV1alpha1Client\n   Fields:\n   - *rest.RESTClient\n   - recommendations: *RecommendationInterface\n\n3. SchedulingV1alpha1Client\n   Fields:\n   - *rest.RESTClient\n   - reservations: *ReservationInterface\n   - podMigrationJobs: *PodMigrationJobInterface\n\n4. SloV1alpha1Client\n   Fields:\n   - *rest.RESTClient\n   - nodeMetrics: *NodeMetricInterface\n   - nodeSLOs: *NodeSLOInterface\n\nRelationships:\n- Clientset \u2192 AnalysisV1alpha1Client (has)\n- Clientset \u2192 SchedulingV1alpha1Client (has)\n- Clientset \u2192 SloV1alpha1Client (has)\n- AnalysisV1alpha1Client \u2192 RecommendationInterface (implements)\n- SchedulingV1alpha1Client \u2192 ReservationInterface (implements)\n- SloV1alpha1Client \u2192 NodeMetricInterface (implements)\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Diagram sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/clientset/versioned/clientset.go#L44-L51"},"clientset.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/clientset/versioned/typed/analysis/v1alpha1/analysis_client.go"},"analysis_client.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/clientset/versioned/typed/scheduling/v1alpha1/scheduling_client.go"},"scheduling_client.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/clientset/versioned/typed/slo/v1alpha1/slo_client.go"},"slo_client.go"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Section sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/clientset/versioned/clientset.go#L44-L148"},"clientset.go"))),(0,o.kt)("h2",{id:"crud-operations-with-typed-clients"},"CRUD Operations with Typed Clients"),(0,o.kt)("p",null,"The clientset provides typed interfaces for performing CRUD operations on Koordinator custom resources. Each API group has its own client that exposes resource-specific operations through interface methods."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"CRUD Operations Sequence Diagram:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Participants:\n- Application\n- KoordinatorClientset\n- RESTClient\n- KubernetesAPI\n\nFlow:\n\n1. Application \u2192 KoordinatorClientset: NewForConfig(config)\n2. KoordinatorClientset internal: Initialize clients for all API groups\n3. KoordinatorClientset \u2192 Application: Return Clientset\n4. Application \u2192 KoordinatorClientset: Get SLO client\n5. KoordinatorClientset \u2192 Application: Return SloV1alpha1Client\n6. Application \u2192 RESTClient: Create NodeMetric\n7. RESTClient \u2192 KubernetesAPI: POST /apis/slo.koordinator.sh/v1alpha1/nodemetrics\n8. KubernetesAPI \u2192 RESTClient: Return created resource\n9. RESTClient \u2192 Application: Return NodeMetric object\n10. Application \u2192 RESTClient: Update NodeMetric\n11. RESTClient \u2192 KubernetesAPI: PUT /apis/slo.koordinator.sh/v1alpha1/nodemetrics/nodename\n12. KubernetesAPI \u2192 RESTClient: Return updated resource\n13. RESTClient \u2192 Application: Return updated NodeMetric\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Diagram sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/clientset/versioned/clientset.go#L91-L148"},"clientset.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/clientset/versioned/typed/slo/v1alpha1/nodemetric.go"},"nodemetric.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/clientset/versioned/typed/analysis/v1alpha1/recommendation.go"},"recommendation.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/clientset/versioned/typed/scheduling/v1alpha1/reservation.go"},"reservation.go"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Section sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/clientset/versioned/clientset.go#L91-L148"},"clientset.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/clientset/versioned/typed/slo/v1alpha1/nodemetric.go#L30-L150"},"nodemetric.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/clientset/versioned/typed/analysis/v1alpha1/recommendation.go#L30-L150"},"recommendation.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/clientset/versioned/typed/scheduling/v1alpha1/reservation.go#L30-L150"},"reservation.go"))),(0,o.kt)("h2",{id:"informer-pattern-implementation"},"Informer Pattern Implementation"),(0,o.kt)("p",null,"The informer pattern enables efficient event-driven programming by maintaining a local cache of Koordinator resources and notifying controllers of changes. Informers watch resources and keep a synchronized cache, reducing direct API server calls."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Informer Pattern Class Diagram:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Core Classes:\n\n1. SharedInformerFactory\n   Fields:\n   - client: versioned.Interface\n   - defaultResync: time.Duration\n   - informers: map[reflect.Type]SharedIndexInformer\n   - startedInformers: map[reflect.Type]bool\n\n2. NodeMetricInformer\n   Methods:\n   - Informer() cache.SharedIndexInformer\n   - Lister() NodeMetricLister\n\n3. ReservationInformer\n   Methods:\n   - Informer() cache.SharedIndexInformer\n   - Lister() ReservationLister\n\n4. RecommendationInformer\n   Methods:\n   - Informer() cache.SharedIndexInformer\n   - Lister() RecommendationLister\n\n5. SharedIndexInformer\n   Methods:\n   - AddEventHandler(handler ResourceEventHandler)\n   - GetStore() Store\n   - GetController() Controller\n\nRelationships:\n- SharedInformerFactory \u2192 NodeMetricInformer (creates)\n- SharedInformerFactory \u2192 ReservationInformer (creates)\n- SharedInformerFactory \u2192 RecommendationInformer (creates)\n- NodeMetricInformer \u2192 SharedIndexInformer (implements)\n- ReservationInformer \u2192 SharedIndexInformer (implements)\n- RecommendationInformer \u2192 SharedIndexInformer (implements)\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Diagram sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/informers/externalversions/factory.go#L219-L254"},"factory.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/informers/externalversions/slo/v1alpha1/nodemetric.go#L36-L39"},"nodemetric.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/informers/externalversions/scheduling/v1alpha1/reservation.go#L36-L39"},"reservation.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/informers/externalversions/analysis/v1alpha1/recommendation.go#L36-L39"},"recommendation.go"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Section sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/informers/externalversions/factory.go#L87-L116"},"factory.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/informers/externalversions/slo/v1alpha1/nodemetric.go#L36-L39"},"nodemetric.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/informers/externalversions/scheduling/v1alpha1/reservation.go#L36-L39"},"reservation.go"))),(0,o.kt)("h2",{id:"lister-interfaces-for-cache-queries"},"Lister Interfaces for Cache Queries"),(0,o.kt)("p",null,"Lister interfaces provide read-only access to the local cache maintained by informers, enabling efficient querying of Koordinator resources without direct API server calls. Listers return objects that must be treated as read-only to maintain cache consistency."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Lister Interfaces Class Diagram:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Core Classes:\n\n1. NodeMetricLister\n   Methods:\n   - List(selector labels.Selector) []*NodeMetric\n   - Get(name string) *NodeMetric\n   - NodeMetricListerExpansion\n\n2. ReservationLister\n   Methods:\n   - List(selector labels.Selector) []*Reservation\n   - Get(name string) *Reservation\n   - ReservationListerExpansion\n\n3. RecommendationLister\n   Methods:\n   - List(selector labels.Selector) []*Recommendation\n   - Recommendations(namespace string) RecommendationNamespaceLister\n   - RecommendationListerExpansion\n\n4. RecommendationNamespaceLister\n   Methods:\n   - List(selector labels.Selector) []*Recommendation\n   - Get(name string) *Recommendation\n\nRelationships:\n- NodeMetricInformer \u2192 NodeMetricLister (provides)\n- ReservationInformer \u2192 ReservationLister (provides)\n- RecommendationInformer \u2192 RecommendationLister (provides)\n- RecommendationLister \u2192 RecommendationNamespaceLister (creates)\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Diagram sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/listers/slo/v1alpha1/nodemetric.go#L29-L37"},"nodemetric_list.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/listers/scheduling/v1alpha1/reservation.go#L29-L37"},"reservation_list.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/listers/analysis/v1alpha1/recommendation.go#L29-L36"},"recommendation_list.go"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Section sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/listers/slo/v1alpha1/nodemetric.go#L29-L37"},"nodemetric_list.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/listers/scheduling/v1alpha1/reservation.go#L29-L37"},"reservation_list.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/listers/analysis/v1alpha1/recommendation.go#L29-L36"},"recommendation_list.go"))),(0,o.kt)("h2",{id:"shared-informer-management"},"Shared Informer Management"),(0,o.kt)("p",null,"Shared informer factories enable multiple controllers to share a single informer instance, reducing resource consumption and API server load. The factory manages the lifecycle of informers and ensures cache consistency across controllers."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Shared Informer Management Flow:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"1. Create SharedInformerFactory\n   \u2193\n2. Configure with client and resync period\n   \u2193\n3. Create informer for specific resource\n   \u2193\n4. Start informer with stop channel\n   \u2193\n5. WaitForCacheSync\n   \u2193\n6. Informer ready for use\n   \u251c\u2500\u2500 Use Lister to query cache\n   \u2514\u2500\u2500 Add event handlers for create/update/delete\n        \u2193\n7. Process events in controller logic\n   \u2193\n8. Handle resource changes\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Diagram sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/informers/externalversions/factory.go#L87-L116"},"factory.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/informers/externalversions/factory.go#L219-L254"},"factory.go"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Section sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/informers/externalversions/factory.go#L87-L116"},"factory.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/informers/externalversions/factory.go#L219-L254"},"factory.go"))),(0,o.kt)("h2",{id:"delegation-rate-limiting-and-retry-mechanisms"},"Delegation, Rate Limiting, and Retry Mechanisms"),(0,o.kt)("p",null,"The Koordinator client architecture implements delegation patterns with built-in rate limiting and retry mechanisms to ensure reliable communication with the Kubernetes API server while respecting cluster resource constraints."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Delegation, Rate Limiting, and Retry Architecture:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Application\n  \u2193\nDelegating Client\n  \u2193\nRate Limiter \u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n  \u2193             \u2502 Client-Side Controls\nRetry Mechanism \u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n  \u2193\nKubernetes API Server\n  \u2193\nResponse\n  \u2193\nRetry Mechanism\n  \u2193\nRate Limiter\n  \u2193\nDelegating Client\n  \u2193\nApplication\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Diagram sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/clientset/versioned/clientset.go#L111-L148"},"clientset.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/generic_client.go"},"generic_client.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/registry.go"},"registry.go"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Section sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/clientset/versioned/clientset.go#L111-L148"},"clientset.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/generic_client.go"},"generic_client.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/registry.go"},"registry.go"))),(0,o.kt)("h2",{id:"deepcopy-methods-and-thread-safety"},"DeepCopy Methods and Thread Safety"),(0,o.kt)("p",null,"All Koordinator custom resource types include generated DeepCopy methods that enable safe copying of objects in concurrent environments. These methods ensure thread safety when working with cached objects from informers."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"DeepCopy Methods Class Diagram:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Core Classes:\n\n1. Recommendation\n   Methods:\n   - DeepCopy() *Recommendation\n   - DeepCopyInto(*Recommendation)\n   - DeepCopyObject() runtime.Object\n\n2. Reservation\n   Methods:\n   - DeepCopy() *Reservation\n   - DeepCopyInto(*Reservation)\n   - DeepCopyObject() runtime.Object\n\n3. NodeMetric\n   Methods:\n   - DeepCopy() *NodeMetric\n   - DeepCopyInto(*NodeMetric)\n   - DeepCopyObject() runtime.Object\n\n4. DeepCopyInterface\n   Methods:\n   - DeepCopy() interface{}\n   - DeepCopyInto(interface{})\n\nRelationships:\n- Recommendation \u2192 DeepCopyInterface (implements)\n- Reservation \u2192 DeepCopyInterface (implements)\n- NodeMetric \u2192 DeepCopyInterface (implements)\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Diagram sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/apis/analysis/v1alpha1/zz_generated.deepcopy.go"},"zz_generated.deepcopy.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/apis/scheduling/v1alpha1/zz_generated.deepcopy.go"},"zz_generated.deepcopy.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/apis/slo/v1alpha1/zz_generated.deepcopy.go"},"zz_generated.deepcopy.go"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Section sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/apis/analysis/v1alpha1/recommendation_types.go"},"recommendation_types.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/apis/scheduling/v1alpha1/reservation_types.go"},"reservation_types.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/apis/slo/v1alpha1/nodemetric_types.go"},"nodemetric_types.go"))),(0,o.kt)("h2",{id:"integration-with-controller-runtime"},"Integration with controller-runtime"),(0,o.kt)("p",null,"Koordinator clients can be seamlessly integrated with controller-runtime to build custom controllers that react to changes in Koordinator resources. The integration leverages the same informer and lister patterns while providing higher-level abstractions."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Integration with controller-runtime Sequence Diagram:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Participants:\n- ControllerManager\n- ControllerBuilder\n- CustomReconciler\n- KoordinatorClient\n- SharedInformerCache\n\nFlow:\n\n1. ControllerManager \u2192 ControllerBuilder: SetupWithManager\n2. ControllerBuilder \u2192 ControllerManager: Register Controller\n3. ControllerManager \u2192 SharedInformerCache: Start Shared Informers\n4. SharedInformerCache internal: Synchronize caches\n\n[Event Processing Loop]\n5. SharedInformerCache \u2192 CustomReconciler: Trigger Reconcile(request)\n6. CustomReconciler \u2192 KoordinatorClient: Get resource from cache via Lister\n7. KoordinatorClient \u2192 CustomReconciler: Return resource\n8. CustomReconciler \u2192 KoordinatorClient: Update resource status\n9. KoordinatorClient \u2192 API: PATCH resource status\n10. API \u2192 KoordinatorClient: Return updated resource\n11. KoordinatorClient \u2192 CustomReconciler: Confirm update\n12. CustomReconciler \u2192 ControllerManager: Return result\n[Loop End]\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Diagram sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/clientset/versioned/clientset.go"},"clientset.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/informers/externalversions/factory.go"},"factory.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/registry.go"},"registry.go"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Section sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/clientset/versioned/clientset.go"},"clientset.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/informers/externalversions/factory.go"},"factory.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/registry.go"},"registry.go"))),(0,o.kt)("h2",{id:"best-practices-and-common-patterns"},"Best Practices and Common Patterns"),(0,o.kt)("p",null,"When working with Koordinator client libraries, several best practices ensure efficient and reliable operation:"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Best Practices Flow:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"1. Initialize Clientset\n   \u2193\n2. Create SharedInformerFactory\n   \u2193\n3. Get Informer for Resource\n   \u2193\n4. Add Event Handlers\n   \u2193\n5. Start Informer\n   \u2193\n6. WaitForCacheSync\n   \u2193\n7. Use Lister for Queries\n   \u2193\n8. Handle Events with Reconciliation\n   \u2193\n9. Use DeepCopy when modifying objects\n   \u2193\n10. Handle Resource Version Conflicts\n    \u2193\n11. Implement Proper Error Handling\n    \u2193\n12. Shutdown Gracefully\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Diagram sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/clientset/versioned/clientset.go"},"clientset.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/informers/externalversions/factory.go"},"factory.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/generic_client.go"},"generic_client.go"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Section sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/clientset/versioned/clientset.go"},"clientset.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/informers/externalversions/factory.go"},"factory.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/generic_client.go"},"generic_client.go"))))}d.isMDXComponent=!0}}]);