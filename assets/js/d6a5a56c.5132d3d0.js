"use strict";(self.webpackChunkkoordinator_sh=self.webpackChunkkoordinator_sh||[]).push([[6334],{3905:(e,t,o)=>{o.d(t,{Zo:()=>u,kt:()=>c});var n=o(7294);function a(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function r(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?r(Object(o),!0).forEach((function(t){a(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,n,a=function(e,t){if(null==e)return{};var o,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var d=n.createContext({}),s=function(e){var t=n.useContext(d),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},u=function(e){var t=s(e.components);return n.createElement(d.Provider,{value:t},e.children)},h="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var o=e.components,a=e.mdxType,r=e.originalType,d=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),h=s(o),k=a,c=h["".concat(d,".").concat(k)]||h[k]||p[k]||r;return o?n.createElement(c,i(i({ref:t},u),{},{components:o})):n.createElement(c,i({ref:t},u))}));function c(e,t){var o=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=o.length,i=new Array(r);i[0]=k;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[h]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<r;s++)i[s]=o[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,o)}k.displayName="MDXCreateElement"},7359:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var n=o(7462),a=(o(7294),o(3905));const r={},i="Webhook Extensions",l={unversionedId:"developer-guide/webhook-extensions",id:"developer-guide/webhook-extensions",title:"Webhook Extensions",description:"This document is generated with assistance from Qoder AI.",source:"@site/docs/developer-guide/webhook-extensions.md",sourceDirName:"developer-guide",slug:"/developer-guide/webhook-extensions",permalink:"/docs/next/developer-guide/webhook-extensions",draft:!1,editUrl:"https://github.com/koordinator-sh/koordinator.sh/edit/main/docs/developer-guide/webhook-extensions.md",tags:[],version:"current",lastUpdatedBy:"Frame",lastUpdatedAt:1760590662,formattedLastUpdatedAt:"Oct 16, 2025",frontMatter:{},sidebar:"docs",previous:{title:"Custom Scheduling Policies",permalink:"/docs/next/developer-guide/custom-scheduling-policies"},next:{title:"Custom Resource Definitions",permalink:"/docs/next/api-reference/custom-resource-definitions"}},d={},s=[{value:"Introduction",id:"introduction",level:2},{value:"Webhook Framework Architecture",id:"webhook-framework-architecture",level:2},{value:"Mutating and Validating Webhook Interfaces",id:"mutating-and-validating-webhook-interfaces",level:2},{value:"Pod Webhook Implementation",id:"pod-webhook-implementation",level:2},{value:"Node Webhook Implementation",id:"node-webhook-implementation",level:2},{value:"Quota Webhook Implementation",id:"quota-webhook-implementation",level:2},{value:"Custom Webhook Plugin Development",id:"custom-webhook-plugin-development",level:2},{value:"Webhook Registration and Configuration",id:"webhook-registration-and-configuration",level:2},{value:"Certificate Management and Service Configuration",id:"certificate-management-and-service-configuration",level:2},{value:"Security Considerations",id:"security-considerations",level:2},{value:"Performance Implications",id:"performance-implications",level:2},{value:"Conclusion",id:"conclusion",level:2}],u={toc:s},h="wrapper";function p(e){let{components:t,...o}=e;return(0,a.kt)(h,(0,n.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"webhook-extensions"},"Webhook Extensions"),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"This document is generated with assistance from Qoder AI.")),(0,a.kt)("h2",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,"Koordinator provides an extensible webhook framework that enables custom admission control logic through mutating and validating webhooks. This document details the webhook mechanisms available for extending Koordinator's functionality, focusing on pod, node, and quota admission controls. The framework in ",(0,a.kt)("inlineCode",{parentName:"p"},"pkg/webhook/util/framework")," provides a structured approach for implementing custom webhook plugins with proper registration, certificate management, and service configuration."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Section sources")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/server.go#L1-L162"},"server.go"))),(0,a.kt)("h2",{id:"webhook-framework-architecture"},"Webhook Framework Architecture"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-mermaid"},'graph TB\nsubgraph "Webhook Core"\nServer[Webhook Server]\nHandlerBuilder[HandlerBuilder Interface]\nHandlerMap[HandlerBuilderMap]\nend\nsubgraph "Webhook Types"\nMutating[Mutating Webhooks]\nValidating[Validating Webhooks]\nend\nsubgraph "Resource-Specific Handlers"\nPodWebhook[Pod Webhooks]\nNodeWebhook[Node Webhooks]\nQuotaWebhook[Quota Webhooks]\nConfigMapWebhook[ConfigMap Webhooks]\nReservationWebhook[Reservation Webhooks]\nend\nHandlerBuilder --\x3e HandlerMap\nHandlerMap --\x3e Server\nServer --\x3e Mutating\nServer --\x3e Validating\nMutating --\x3e PodWebhook\nMutating --\x3e NodeWebhook\nMutating --\x3e QuotaWebhook\nValidating --\x3e PodWebhook\nValidating --\x3e NodeWebhook\nValidating --\x3e QuotaWebhook\nValidating --\x3e ConfigMapWebhook\nValidating --\x3e ReservationWebhook\nstyle HandlerBuilder fill:#f9f,stroke:#333\nstyle HandlerMap fill:#bbf,stroke:#333\nstyle Server fill:#9f9,stroke:#333\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Diagram sources")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/server.go#L44"},"server.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/util/framework/builder.go#L1-L28"},"builder.go"))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Section sources")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/server.go#L1-L162"},"server.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/util/framework/builder.go#L1-L28"},"builder.go"))),(0,a.kt)("h2",{id:"mutating-and-validating-webhook-interfaces"},"Mutating and Validating Webhook Interfaces"),(0,a.kt)("p",null,"The webhook framework defines a standardized interface for both mutating and validating webhooks through the ",(0,a.kt)("inlineCode",{parentName:"p"},"HandlerBuilder")," interface in ",(0,a.kt)("inlineCode",{parentName:"p"},"pkg/webhook/util/framework/builder.go"),". This interface requires two methods: ",(0,a.kt)("inlineCode",{parentName:"p"},"WithControllerManager")," to inject the controller manager dependency, and ",(0,a.kt)("inlineCode",{parentName:"p"},"Build")," to construct the admission handler."),(0,a.kt)("p",null,"Mutating webhooks modify resources during creation or update operations, while validating webhooks reject requests that don't meet specific criteria. Both types follow the same registration pattern but serve different purposes in the admission control process."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-mermaid"},"classDiagram\nclass HandlerBuilder {\n<<interface>>\n+WithControllerManager(mgr ctrl.Manager) HandlerBuilder\n+Build() admission.Handler\n}\nclass PodMutatingHandler {\n+Client client.Client\n+Decoder *admission.Decoder\n+Handle(ctx context.Context, req admission.Request) admission.Response\n+InjectClient(c client.Client) error\n+InjectDecoder(d *admission.Decoder) error\n}\nclass PodValidatingHandler {\n+Client client.Client\n+Decoder *admission.Decoder\n+QuotaEvaluator quotaevaluate.Evaluator\n+PodEnhancedValidator *PodEnhancedValidator\n+Handle(ctx context.Context, req admission.Request) admission.Response\n+InjectClient(c client.Client) error\n+InjectDecoder(d *admission.Decoder) error\n}\nclass NodeMutatingHandler {\n+Client client.Client\n+Decoder *admission.Decoder\n+ignoreFilter IgnoreFilter\n+Handle(ctx context.Context, req admission.Request) admission.Response\n+InjectClient(c client.Client) error\n+InjectDecoder(d *admission.Decoder) error\n}\nclass ElasticQuotaMutatingHandler {\n+Client client.Client\n+Decoder *admission.Decoder\n+Handle(ctx context.Context, req admission.Request) admission.Response\n+InjectClient(c client.Client) error\n+InjectDecoder(decoder *admission.Decoder) error\n+InjectCache(cache cache.Cache) error\n}\nHandlerBuilder <|-- PodMutatingHandler\nHandlerBuilder <|-- PodValidatingHandler\nHandlerBuilder <|-- NodeMutatingHandler\nHandlerBuilder <|-- ElasticQuotaMutatingHandler\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Diagram sources")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/util/framework/builder.go#L1-L28"},"builder.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/pod/mutating/mutating_handler.go#L1-L177"},"mutating_handler.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/pod/validating/validating_handler.go#L1-L162"},"validating_handler.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/node/mutating/mutating_handler.go#L1-L164"},"mutating_handler.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/elasticquota/mutating/mutating_handler.go#L1-L121"},"mutating_handler.go"))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Section sources")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/util/framework/builder.go#L1-L28"},"builder.go"))),(0,a.kt)("h2",{id:"pod-webhook-implementation"},"Pod Webhook Implementation"),(0,a.kt)("p",null,"Pod webhooks in Koordinator handle both mutating and validating operations for pod resources. The mutating webhook processes pod creation by applying various transformations, while the validating webhook ensures pods meet specific criteria before admission."),(0,a.kt)("p",null,"The pod mutating webhook implements multiple mutation functions that are executed sequentially during pod creation, including cluster colocation profile application, extended resource specification, multi-quota tree affinity, and device resource specification. Each mutation function is timed and metrics are recorded for performance monitoring."),(0,a.kt)("p",null,"The pod validating webhook performs comprehensive validation checks, including cluster reservation validation, cluster colocation profile validation, elastic quota validation, quota evaluation, device resource validation, and enhanced validation. These validations are executed in sequence, and any failure results in the rejection of the pod creation request."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-mermaid"},"sequenceDiagram\nparticipant Client\nparticipant APIserver\nparticipant PodMutatingWebhook\nparticipant PodValidatingWebhook\nClient->>APIserver : Create Pod Request\nAPIserver->>PodMutatingWebhook : Admission Review\nPodMutatingWebhook->>PodMutatingWebhook : Apply ClusterColocationProfile\nPodMutatingWebhook->>PodMutatingWebhook : Apply ExtendedResourceSpec\nPodMutatingWebhook->>PodMutatingWebhook : Add MultiQuotaTree Affinity\nPodMutatingWebhook->>PodMutatingWebhook : Apply DeviceResourceSpec\nPodMutatingWebhook--\x3e>APIserver : Mutated Pod\nAPIserver->>PodValidatingWebhook : Admission Review\nPodValidatingWebhook->>PodValidatingWebhook : Validate ClusterReservation\nPodValidatingWebhook->>PodValidatingWebhook : Validate ClusterColocationProfile\nPodValidatingWebhook->>PodValidatingWebhook : Validate ElasticQuota\nPodValidatingWebhook->>PodValidatingWebhook : Evaluate Quota\nPodValidatingWebhook->>PodValidatingWebhook : Validate DeviceResource\nPodValidatingWebhook->>PodValidatingWebhook : Enhanced Validation\nPodValidatingWebhook--\x3e>APIserver : Validation Response\nAPIserver--\x3e>Client : Pod Created or Rejected\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Diagram sources")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/add_pod.go#L1-L35"},"add_pod.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/pod/mutating/mutating_handler.go#L1-L177"},"mutating_handler.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/pod/validating/validating_handler.go#L1-L162"},"validating_handler.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/pod/mutating/webhooks.go#L31-L33"},"webhooks.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/pod/validating/webhooks.go#L31-L33"},"webhooks.go"))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Section sources")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/add_pod.go#L1-L35"},"add_pod.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/pod/mutating/mutating_handler.go#L1-L177"},"mutating_handler.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/pod/validating/validating_handler.go#L1-L162"},"validating_handler.go"))),(0,a.kt)("h2",{id:"node-webhook-implementation"},"Node Webhook Implementation"),(0,a.kt)("p",null,"Node webhooks in Koordinator focus on mutating node status resources rather than the node resources themselves. The implementation is designed to modify node status information during updates, enabling dynamic adjustment of node properties based on various plugins."),(0,a.kt)("p",null,"The node mutating webhook uses a plugin-based architecture where multiple plugins can be registered to handle different aspects of node mutation. Currently, the resource amplification plugin is implemented to adjust node resource reporting. The webhook specifically targets the node status sub-resource, ensuring that only status updates are processed."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-mermaid"},'flowchart TD\nStart([Node Status Update]) --\x3e CheckResource{"Resource = nodes?"}\nCheckResource --\x3e |No| Allow[Allow Request]\nCheckResource --\x3e |Yes| CheckSubResource{"SubResource = status?"}\nCheckSubResource --\x3e |No| Allow\nCheckSubResource --\x3e |Yes| Decode[Decode Node Object]\nDecode --\x3e Clone[Create Deep Copy]\nClone --\x3e PluginLoop[For each plugin]\nPluginLoop --\x3e Admit[Call plugin.Admit]\nAdmit --\x3e CheckError{"Error?"}\nCheckError --\x3e |Yes| Reject[Reject Request]\nCheckError --\x3e |No| NextPlugin[Next Plugin]\nNextPlugin --\x3e CheckLast{"Last Plugin?"}\nCheckLast --\x3e |No| PluginLoop\nCheckLast --\x3e |Yes| Compare{"Modified?"}\nCompare --\x3e |No| Allow\nCompare --\x3e |Yes| GeneratePatch[Generate JSON Patch]\nGeneratePatch --\x3e ReturnPatch[Return Patch Response]\nstyle Allow fill:#9f9,stroke:#333\nstyle Reject fill:#f99,stroke:#333\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Diagram sources")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/add_node.go#L1-L36"},"add_node.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/node/mutating/mutating_handler.go#L1-L164"},"mutating_handler.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/node/mutating/webhooks.go#L30-L32"},"webhooks.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/node/validating/webhooks.go#L30-L32"},"webhooks.go"))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Section sources")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/add_node.go#L1-L36"},"add_node.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/node/mutating/mutating_handler.go#L1-L164"},"mutating_handler.go"))),(0,a.kt)("h2",{id:"quota-webhook-implementation"},"Quota Webhook Implementation"),(0,a.kt)("p",null,"Quota webhooks in Koordinator handle the admission control for elastic quota resources. These webhooks ensure that quota specifications are valid and properly configured before they are applied to the cluster."),(0,a.kt)("p",null,"The elastic quota mutating webhook processes quota creation and updates by applying necessary mutations through the quota plugin system. The webhook specifically targets the elasticquotas resource and uses the quota topology plugin to perform the actual mutation logic. The implementation includes proper error handling and metrics collection for performance monitoring."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-mermaid"},"sequenceDiagram\nparticipant Client\nparticipant APIserver\nparticipant QuotaMutatingWebhook\nClient->>APIserver : Create/Update ElasticQuota\nAPIserver->>QuotaMutatingWebhook : Admission Review\nQuotaMutatingWebhook->>QuotaMutatingWebhook : Decode Quota Object\nQuotaMutatingWebhook->>QuotaMutatingWebhook : Create Copy\nQuotaMutatingWebhook->>QuotaPlugin : NewPlugin\nQuotaMutatingWebhook->>QuotaPlugin : AdmitQuota\nQuotaPlugin->>QuotaPlugin : Apply Quota Topology\nQuotaPlugin--\x3e>QuotaMutatingWebhook : Mutation Result\nQuotaMutatingWebhook->>QuotaMutatingWebhook : Compare Original vs Modified\nQuotaMutatingWebhook->>QuotaMutatingWebhook : Generate JSON Patch if Modified\nQuotaMutatingWebhook--\x3e>APIserver : Patch Response\nAPIserver--\x3e>Client : Quota Created/Updated or Rejected\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Diagram sources")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/add_quota.go#L1-L37"},"add_quota.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/elasticquota/mutating/mutating_handler.go#L1-L121"},"mutating_handler.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/elasticquota/mutating/webhooks.go#L31-L33"},"webhooks.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/elasticquota/validating/webhooks.go#L31-L33"},"webhooks.go"))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Section sources")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/add_quota.go#L1-L37"},"add_quota.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/elasticquota/mutating/mutating_handler.go#L1-L121"},"mutating_handler.go"))),(0,a.kt)("h2",{id:"custom-webhook-plugin-development"},"Custom Webhook Plugin Development"),(0,a.kt)("p",null,"Developing custom webhook plugins in Koordinator follows a standardized pattern using the framework in ",(0,a.kt)("inlineCode",{parentName:"p"},"pkg/webhook/util/framework"),". Developers can create new webhook plugins by implementing the ",(0,a.kt)("inlineCode",{parentName:"p"},"HandlerBuilder")," interface and registering their handlers in the appropriate webhook package."),(0,a.kt)("p",null,"The process involves creating a new package under the webhook directory for the target resource, implementing the mutating or validating handler struct, and registering the handler builder in the package's ",(0,a.kt)("inlineCode",{parentName:"p"},"webhooks.go")," file. Feature gates control the enablement of webhook plugins, allowing for gradual rollout and testing."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-mermaid"},"flowchart TD\nStart[Create New Webhook Package] --\x3e ImplementHandler[Implement Handler Struct]\nImplementHandler --\x3e FulfillInterface[Fulfill HandlerBuilder Interface]\nFulfillInterface --\x3e ImplementWithControllerManager[Implement WithControllerManager]\nImplementWithControllerManager --\x3e ImplementBuild[Implement Build]\nImplementBuild --\x3e CreateWebhooksGo[Create webhooks.go]\nCreateWebhooksGo --\x3e RegisterHandler[Register HandlerBuilderMap]\nRegisterHandler --\x3e AddInit[Add to init() in add_<resource>.go]\nAddInit --\x3e UseFeatureGate[Use Feature Gate for Enablement]\nUseFeatureGate --\x3e Test[Implement Unit Tests]\nTest --\x3e Integrate[Integrate with Webhook Server]\nstyle Start fill:#f96,stroke:#333\nstyle Integrate fill:#9f9,stroke:#333\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Section sources")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/util/framework/builder.go#L1-L28"},"builder.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/add_pod.go#L1-L35"},"add_pod.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/add_node.go#L1-L36"},"add_node.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/add_quota.go#L1-L37"},"add_quota.go"))),(0,a.kt)("h2",{id:"webhook-registration-and-configuration"},"Webhook Registration and Configuration"),(0,a.kt)("p",null,"Webhook registration in Koordinator follows a centralized pattern where individual webhook packages register their handlers through the ",(0,a.kt)("inlineCode",{parentName:"p"},"addHandlersWithGate")," function in ",(0,a.kt)("inlineCode",{parentName:"p"},"pkg/webhook/server.go"),". This function takes a map of handler builders and a gate function that determines whether the webhook should be enabled based on feature flags."),(0,a.kt)("p",null,"Each resource-specific webhook is registered in its corresponding ",(0,a.kt)("inlineCode",{parentName:"p"},"add_<resource>.go")," file, which calls ",(0,a.kt)("inlineCode",{parentName:"p"},"addHandlersWithGate")," with the appropriate handler builder map and feature gate check. This modular approach allows for independent development and testing of webhook functionality."),(0,a.kt)("p",null,"The registration process also includes setting up the webhook server with the appropriate host, port, and certificate directory, which are configured through the webhook utility package."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-mermaid"},"sequenceDiagram\nparticipant Main\nparticipant WebhookServer\nparticipant HandlerRegistry\nMain->>WebhookServer : SetupWithManager\nWebhookServer->>HandlerRegistry : filterActiveHandlers\nHandlerRegistry->>HandlerRegistry : Check Feature Gates\nHandlerRegistry->>HandlerRegistry : Remove Disabled Handlers\nWebhookServer->>HandlerRegistry : Iterate HandlerBuilderMap\nloop For each HandlerBuilder\nHandlerRegistry->>HandlerBuilder : WithControllerManager\nHandlerBuilder->>HandlerBuilder : Build\nWebhookServer->>WebhookServer : Register Handler\nend\nWebhookServer->>WebhookServer : Register Conversion Handler\nWebhookServer->>WebhookServer : Register Health Handler\nWebhookServer->>Main : Return Success\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Diagram sources")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/server.go#L1-L162"},"server.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/add_pod.go#L1-L35"},"add_pod.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/add_node.go#L1-L36"},"add_node.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/add_quota.go#L1-L37"},"add_quota.go"))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Section sources")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/server.go#L1-L162"},"server.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/add_pod.go#L1-L35"},"add_pod.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/add_node.go#L1-L36"},"add_node.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/add_quota.go#L1-L37"},"add_quota.go"))),(0,a.kt)("h2",{id:"certificate-management-and-service-configuration"},"Certificate Management and Service Configuration"),(0,a.kt)("p",null,"Certificate management for Koordinator webhooks is handled through the webhook utility package, which provides functions to retrieve the certificate directory and port configuration. The webhook server is configured to use TLS with certificates stored in the specified directory."),(0,a.kt)("p",null,"The service configuration is defined in the ",(0,a.kt)("inlineCode",{parentName:"p"},"config/webhook")," directory, which contains the necessary manifests for deploying the webhook service, including the service definition, certificate manager configuration, and webhook manifests. The kustomization files in this directory orchestrate the deployment of the webhook components."),(0,a.kt)("p",null,"The certificate generation and management process is automated, with the webhook controller handling the lifecycle of webhook configurations and certificates. This ensures that the webhook server can securely communicate with the Kubernetes API server."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Section sources")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/server.go#L1-L162"},"server.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/config/webhook"},"config/webhook"))),(0,a.kt)("h2",{id:"security-considerations"},"Security Considerations"),(0,a.kt)("p",null,"Security considerations for Koordinator webhooks include proper authentication and authorization through RBAC configuration, secure communication via TLS, and input validation to prevent malicious requests. The webhook server requires specific permissions to access secrets for certificate management and to update webhook configurations."),(0,a.kt)("p",null,"Feature gates provide an additional security layer by allowing administrators to enable or disable specific webhooks based on their security requirements. The modular design of the webhook system ensures that individual webhooks can be disabled without affecting the overall functionality of the system."),(0,a.kt)("p",null,"Input validation is critical in webhook handlers to prevent injection attacks and ensure data integrity. All webhook handlers should validate incoming requests and reject malformed or unauthorized requests with appropriate error messages."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Section sources")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/server.go#L1-L162"},"server.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/add_pod.go#L1-L35"},"add_pod.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/add_node.go#L1-L36"},"add_node.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/add_quota.go#L1-L37"},"add_quota.go"))),(0,a.kt)("h2",{id:"performance-implications"},"Performance Implications"),(0,a.kt)("p",null,"Performance implications of custom webhook development in Koordinator include latency added to the admission control process, resource utilization of the webhook server, and potential bottlenecks during high-volume operations. Each webhook handler introduces additional processing time that can impact the overall cluster performance."),(0,a.kt)("p",null,"The framework includes built-in metrics collection to monitor webhook performance, with duration metrics recorded for each webhook operation. These metrics help identify performance bottlenecks and optimize webhook implementations."),(0,a.kt)("p",null,"To minimize performance impact, webhook handlers should be designed to be lightweight and efficient, avoiding expensive operations or external dependencies. Caching and batching can be used to reduce the overhead of repeated operations."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Section sources")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/server.go#L1-L162"},"server.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/pod/mutating/mutating_handler.go#L1-L177"},"mutating_handler.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/pod/validating/validating_handler.go#L1-L162"},"validating_handler.go"))),(0,a.kt)("h2",{id:"conclusion"},"Conclusion"),(0,a.kt)("p",null,"Koordinator's webhook framework provides a robust and extensible mechanism for implementing custom admission control logic. The system supports both mutating and validating webhooks for various resources including pods, nodes, and quotas, with a standardized interface for plugin development."),(0,a.kt)("p",null,"The architecture emphasizes modularity, security, and performance, with feature gates enabling controlled rollout of new webhook functionality. The framework in ",(0,a.kt)("inlineCode",{parentName:"p"},"pkg/webhook/util/framework")," provides the necessary abstractions for building custom webhook plugins, while the registration system ensures proper integration with the webhook server."),(0,a.kt)("p",null,"When developing custom webhook plugins, developers should follow the established patterns, implement proper error handling, and consider the performance implications of their code. The comprehensive metrics collection system enables monitoring and optimization of webhook performance in production environments."))}p.isMDXComponent=!0}}]);