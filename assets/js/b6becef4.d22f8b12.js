"use strict";(self.webpackChunkkoordinator_sh=self.webpackChunkkoordinator_sh||[]).push([[3497],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>g});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=u(r),m=o,g=c["".concat(s,".").concat(m)]||c[m]||d[m]||i;return r?n.createElement(g,a(a({ref:t},p),{},{components:r})):n.createElement(g,a({ref:t},p))}));function g(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:o,a[1]=l;for(var u=2;u<i;u++)a[u]=r[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},6778:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var n=r(7462),o=(r(7294),r(3905));const i={},a="Extensibility",l={unversionedId:"developer-guide/extensibility",id:"developer-guide/extensibility",title:"Extensibility",description:"This document is generated with assistance from Qoder AI.",source:"@site/docs/developer-guide/extensibility.md",sourceDirName:"developer-guide",slug:"/developer-guide/extensibility",permalink:"/docs/next/developer-guide/extensibility",draft:!1,editUrl:"https://github.com/koordinator-sh/koordinator.sh/edit/main/docs/developer-guide/extensibility.md",tags:[],version:"current",lastUpdatedBy:"Frame",lastUpdatedAt:1760590662,formattedLastUpdatedAt:"Oct 16, 2025",frontMatter:{},sidebar:"docs",previous:{title:"Metrics Collection",permalink:"/docs/next/developer-guide/metrics-collection"},next:{title:"Plugin Development",permalink:"/docs/next/developer-guide/plugin-development"}},s={},u=[{value:"Introduction",id:"introduction",level:2},{value:"Plugin Architecture and Registration",id:"plugin-architecture-and-registration",level:2},{value:"Scheduling Framework Extension Points",id:"scheduling-framework-extension-points",level:2},{value:"Transformer Extension Points",id:"transformer-extension-points",level:3},{value:"Reservation Management Extension Points",id:"reservation-management-extension-points",level:3},{value:"Webhook Extension System",id:"webhook-extension-system",level:2},{value:"Webhook Architecture",id:"webhook-architecture",level:3},{value:"Cluster Colocation Profile Webhook",id:"cluster-colocation-profile-webhook",level:3},{value:"QoS Enforcement and Policy Plugins",id:"qos-enforcement-and-policy-plugins",level:2},{value:"QoS Policy Application Flow",id:"qos-policy-application-flow",level:3},{value:"Development and Testing Guidelines",id:"development-and-testing-guidelines",level:2},{value:"Troubleshooting Plugin Development",id:"troubleshooting-plugin-development",level:2},{value:"Diagnostic Tools",id:"diagnostic-tools",level:3}],p={toc:u},c="wrapper";function d(e){let{components:t,...r}=e;return(0,o.kt)(c,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"extensibility"},"Extensibility"),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"This document is generated with assistance from Qoder AI.")),(0,o.kt)("h2",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"Koordinator provides a comprehensive extensibility framework for custom policies and QoS enforcement through scheduling plugins, webhook admission controllers, and runtime hooks. This document details plugin development, extension point architecture, and practical implementation for custom scheduling policies and QoS strategies."),(0,o.kt)("h2",{id:"plugin-architecture-and-registration"},"Plugin Architecture and Registration"),(0,o.kt)("p",null,"Koordinator's plugin architecture builds on an enhanced Kubernetes scheduling framework with additional extension points while maintaining compatibility. Uses a factory pattern for plugin registration that intercepts initialization to inject extended functionality."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mermaid"},"classDiagram\nclass FrameworkExtender {\n+ExtendedHandle\n+SetConfiguredPlugins()\n+RunReservationExtensionPreRestoreReservation()\n+RunReservationExtensionRestoreReservation()\n+RunReservationScorePlugins()\n+RunReservationFilterPlugins()\n+RunNUMATopologyManagerAdmit()\n+RunAllocatePlugins()\n}\nclass ExtendedHandle {\n+Scheduler()\n+KoordinatorClientSet()\n+KoordinatorSharedInformerFactory()\n+RegisterErrorHandlerFilters()\n+RegisterForgetPodHandler()\n+GetReservationNominator()\n+GetNetworkTopologyTreeManager()\n}\nclass FrameworkExtenderFactory {\n+NewFrameworkExtender()\n+GetExtender()\n+InitScheduler()\n+PluginFactoryProxy()\n+updatePlugins()\n}\nFrameworkExtender <|-- frameworkExtenderImpl\nExtendedHandle <|-- frameworkExtenderImpl\nFrameworkExtenderFactory --\x3e frameworkExtenderImpl : creates\nFrameworkExtenderFactory --\x3e PluginFactoryProxy : uses\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Diagram sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/scheduler/frameworkext/framework_extender.go"},"framework_extender.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/scheduler/frameworkext/framework_extender_factory.go"},"framework_extender_factory.go"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Section sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/scheduler/frameworkext/framework_extender.go"},"framework_extender.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/scheduler/frameworkext/framework_extender_factory.go"},"framework_extender_factory.go"))),(0,o.kt)("h2",{id:"scheduling-framework-extension-points"},"Scheduling Framework Extension Points"),(0,o.kt)("p",null,"The enhanced framework provides extension points for plugins to participate in scheduling at various stages. Extension points include transformer interfaces that modify scheduling objects before core operations, reservation-specific plugins for resource reservations, and specialized scoring/filtering mechanisms."),(0,o.kt)("h3",{id:"transformer-extension-points"},"Transformer Extension Points"),(0,o.kt)("p",null,"Transformer plugins modify scheduling objects (Pods and NodeInfo) before core operations at specific cycle phases:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"BeforePreFilter \u2192 Core PreFilter \u2192 AfterPreFilter"),(0,o.kt)("li",{parentName:"ul"},"BeforeFilter \u2192 Core Filter"),(0,o.kt)("li",{parentName:"ul"},"BeforeScore \u2192 Core Score"),(0,o.kt)("li",{parentName:"ul"},"AllocatePlugins (at Reserve phase)"),(0,o.kt)("li",{parentName:"ul"},"Bind Phase")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mermaid"},'flowchart TD\nStart([Scheduling Cycle]) --\x3e PreFilterPhase["PreFilter Phase"]\nPreFilterPhase --\x3e BeforePreFilter["BeforePreFilter Transformers"]\nBeforePreFilter --\x3e CorePreFilter["Core PreFilter Plugins"]\nCorePreFilter --\x3e AfterPreFilter["AfterPreFilter Transformers"]\nAfterPreFilter --\x3e FilterPhase["Filter Phase"]\nFilterPhase --\x3e BeforeFilter["BeforeFilter Transformers"]\nBeforeFilter --\x3e CoreFilter["Core Filter Plugins"]\nCoreFilter --\x3e ScorePhase["Score Phase"]\nScorePhase --\x3e BeforeScore["BeforeScore Transformers"]\nBeforeScore --\x3e CoreScore["Core Score Plugins"]\nCoreScore --\x3e ReservePhase["Reserve Phase"]\nReservePhase --\x3e AllocatePlugins["Allocate Plugins"]\nAllocatePlugins --\x3e BindPhase["Bind Phase"]\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Section sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/scheduler/frameworkext/interface.go"},"interface.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/scheduler/frameworkext/framework_extender.go"},"framework_extender.go"))),(0,o.kt)("h3",{id:"reservation-management-extension-points"},"Reservation Management Extension Points"),(0,o.kt)("p",null,"Koordinator provides specialized extension points for reservation-based scheduling:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"RunReservationExtensionPreRestoreReservation"),(0,o.kt)("li",{parentName:"ol"},"RestoreReservation (matched/unmatched)"),(0,o.kt)("li",{parentName:"ol"},"RunReservationFilterPlugins"),(0,o.kt)("li",{parentName:"ol"},"RunReservationScorePlugins"),(0,o.kt)("li",{parentName:"ol"},"NominateReservation")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mermaid"},'sequenceDiagram\nparticipant Pod as "Pod to Schedule"\nparticipant Framework as "FrameworkExtender"\nparticipant Reservation as "Reservation Plugin"\nPod->>Framework : Schedule Request\nFramework->>Framework : RunReservationExtensionPreRestoreReservation\nFramework->>Reservation : RestoreReservation (matched/unmatched)\nReservation--\x3e>Framework : PluginToReservationRestoreStates\nFramework->>Framework : RunReservationFilterPlugins\nFramework->>Reservation : FilterReservation\nReservation--\x3e>Framework : Filter Status\nFramework->>Framework : RunReservationScorePlugins\nFramework->>Reservation : ScoreReservation\nReservation--\x3e>Framework : Reservation Scores\nFramework->>Framework : NominateReservation\nFramework--\x3e>Pod : Selected Node and Reservation\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Diagram sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/scheduler/frameworkext/interface.go"},"interface.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/scheduler/frameworkext/framework_extender.go"},"framework_extender.go"))),(0,o.kt)("h2",{id:"webhook-extension-system"},"Webhook Extension System"),(0,o.kt)("p",null,"Koordinator's webhook system provides admission control through mutating and validating webhooks, built on controller-runtime with feature-gated functionality."),(0,o.kt)("h3",{id:"webhook-architecture"},"Webhook Architecture"),(0,o.kt)("p",null,"The webhook server architecture follows a modular design with centralized registration and feature-based activation:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mermaid"},'graph TB\nsubgraph "API Server"\nAPI[API Server]\nend\nsubgraph "Webhook Server"\nServer[Webhook Server]\nHandlerRegistry[Handler Registry]\nHealthChecker[Health Checker]\nend\nsubgraph "Webhook Components"\nPodWebhook[Pod Webhooks]\nNodeWebhook[Node Webhooks]\nReservationWebhook[Reservation Webhooks]\nend\nAPI --\x3e Server\nServer --\x3e HandlerRegistry\nHandlerRegistry --\x3e PodWebhook\nHandlerRegistry --\x3e NodeWebhook\nHandlerRegistry --\x3e ReservationWebhook\nServer --\x3e HealthChecker\nstyle Server fill:#f9f,stroke:#333\nstyle HandlerRegistry fill:#bbf,stroke:#333\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Diagram sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/server.go"},"server.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/util/controller/webhook_controller.go"},"webhook_controller.go"))),(0,o.kt)("h3",{id:"cluster-colocation-profile-webhook"},"Cluster Colocation Profile Webhook"),(0,o.kt)("p",null,"The cluster colocation profile webhook demonstrates mutation logic applying QoS policies and resource configurations based on matching criteria. Workflow:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Load ClusterColocationProfiles"),(0,o.kt)("li",{parentName:"ol"},"Match Profiles to Pod"),(0,o.kt)("li",{parentName:"ol"},"Sort Profiles by Name (if matched)"),(0,o.kt)("li",{parentName:"ol"},"Apply Mutations from Profiles"),(0,o.kt)("li",{parentName:"ol"},"Handle Resource Specifications")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mermaid"},'flowchart TD\nStart([Admission Request]) --\x3e ProfileCheck["Load ClusterColocationProfiles"]\nProfileCheck --\x3e MatchProfiles["Match Profiles to Pod"]\nMatchProfiles --\x3e HasMatch{"Profiles Matched?"}\nHasMatch --\x3e |No| AllowRequest["Allow Request"]\nHasMatch --\x3e |Yes| SortProfiles["Sort Profiles by Name"]\nSortProfiles --\x3e ApplyMutations["Apply Mutations from Profiles"]\nApplyMutations --\x3e HandleResources["Handle Resource Specifications"]\nHandleResources --\x3e CompleteRequest["Complete Request"]\nAllowRequest --\x3e CompleteRequest\nCompleteRequest --\x3e End([Request Complete])\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Section sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/pod/mutating/cluster_colocation_profile.go"},"cluster_colocation_profile.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/add_pod.go"},"add_pod.go"))),(0,o.kt)("h2",{id:"qos-enforcement-and-policy-plugins"},"QoS Enforcement and Policy Plugins"),(0,o.kt)("p",null,"Koordinator's QoS enforcement combines webhook mutations and scheduling framework plugins. The system applies QoS policies at admission time and enforces them during scheduling."),(0,o.kt)("h3",{id:"qos-policy-application-flow"},"QoS Policy Application Flow"),(0,o.kt)("p",null,"The QoS policy application follows a multi-stage process that begins with webhook mutation and continues through the scheduling pipeline:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mermaid"},'sequenceDiagram\nparticipant User as "User"\nparticipant API as "API Server"\nparticipant Webhook as "Koordinator Webhook"\nparticipant Scheduler as "Koordinator Scheduler"\nUser->>API : Create Pod\nAPI->>Webhook : Admission Review\nWebhook->>Webhook : Match ClusterColocationProfiles\nWebhook->>Webhook : Apply QoS Labels and Annotations\nWebhook->>Webhook : Transform Resource Specifications\nWebhook--\x3e>API : Patch Operations\nAPI->>API : Apply Patches\nAPI->>Scheduler : Schedule Pod\nScheduler->>Scheduler : Apply QoS-aware Scheduling\nScheduler->>Scheduler : Enforce Resource Isolation\nScheduler--\x3e>User : Pod Scheduled\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Section sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/pod/mutating/cluster_colocation_profile.go"},"cluster_colocation_profile.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/scheduler/frameworkext/framework_extender.go"},"framework_extender.go"))),(0,o.kt)("h2",{id:"development-and-testing-guidelines"},"Development and Testing Guidelines"),(0,o.kt)("p",null,"Developing custom plugins requires understanding plugin registration, extension interfaces, and testing methodologies."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Plugin Development Process"),":"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Define Plugin Interface: Implement appropriate extension interfaces"),(0,o.kt)("li",{parentName:"ol"},"Register Plugin: Use PluginFactoryProxy mechanism"),(0,o.kt)("li",{parentName:"ol"},"Implement Business Logic: Develop core functionality"),(0,o.kt)("li",{parentName:"ol"},"Handle Configuration: Support configuration through plugin arguments"),(0,o.kt)("li",{parentName:"ol"},"Implement Testing: Create unit and integration tests")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Testing Strategies"),": Multiple approaches required:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Unit Testing"),": Mock dependencies for plugin business logic"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Integration Testing"),": Test with real components for framework integration"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"End-to-End Testing"),": Validate system behavior in cluster")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mermaid"},'flowchart TD\nsubgraph "Testing Levels"\nUnitTest[Unit Testing]\nIntegrationTest[Integration Testing]\nE2ETest[End-to-End Testing]\nend\nUnitTest --\x3e |Mocks| PluginLogic["Plugin Business Logic"]\nIntegrationTest --\x3e |Real Components| FrameworkIntegration["Framework Integration"]\nE2ETest --\x3e |Cluster| SystemBehavior["System Behavior"]\nstyle UnitTest fill:#dfd,stroke:#333\nstyle IntegrationTest fill:#ddf,stroke:#333\nstyle E2ETest fill:#fdd,stroke:#333\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Section sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/scheduler/frameworkext/framework_extender_factory.go"},"framework_extender_factory.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/scheduler/frameworkext/interface.go"},"interface.go"))),(0,o.kt)("h2",{id:"troubleshooting-plugin-development"},"Troubleshooting Plugin Development"),(0,o.kt)("p",null,"Common issues when developing Koordinator plugins:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Issue"),(0,o.kt)("th",{parentName:"tr",align:null},"Symptoms"),(0,o.kt)("th",{parentName:"tr",align:null},"Resolution"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Plugin Not Registered"),(0,o.kt)("td",{parentName:"tr",align:null},"Logic not executed"),(0,o.kt)("td",{parentName:"tr",align:null},"Verify PluginFactoryProxy registration and feature gates")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Configuration Problems"),(0,o.kt)("td",{parentName:"tr",align:null},"Initialization failure"),(0,o.kt)("td",{parentName:"tr",align:null},"Check plugin arguments and configuration schema")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Extension Point Not Triggered"),(0,o.kt)("td",{parentName:"tr",align:null},"Expected logic not executed"),(0,o.kt)("td",{parentName:"tr",align:null},"Verify plugin enabled in scheduler configuration")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Performance Issues"),(0,o.kt)("td",{parentName:"tr",align:null},"Increased scheduling latency"),(0,o.kt)("td",{parentName:"tr",align:null},"Optimize plugin logic, consider async operations")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Compatibility Problems"),(0,o.kt)("td",{parentName:"tr",align:null},"Conflicts with other plugins"),(0,o.kt)("td",{parentName:"tr",align:null},"Review plugin ordering and dependencies")))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Diagnostic Tools"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Debug Flags: Enable debug output for filter/score results"),(0,o.kt)("li",{parentName:"ul"},"Metrics Collection: Monitor plugin execution duration and success rates"),(0,o.kt)("li",{parentName:"ul"},"Log Analysis: Examine detailed logs for execution flow"),(0,o.kt)("li",{parentName:"ul"},"API Inspection: Use exposed REST APIs to inspect scheduler state\n| Plugin Not Registered | Plugin logic not executed | Verify PluginFactoryProxy registration and feature gate settings |\n| Configuration Problems | Plugin fails to initialize | Check plugin arguments and configuration schema |\n| Extension Point Not Triggered | Expected logic not executed | Verify plugin is enabled in the scheduler configuration |\n| Performance Issues | Scheduling latency increased | Optimize plugin logic and consider asynchronous operations |\n| Compatibility Problems | Conflicts with other plugins | Review plugin ordering and dependencies |")),(0,o.kt)("h3",{id:"diagnostic-tools"},"Diagnostic Tools"),(0,o.kt)("p",null,"Koordinator provides several diagnostic tools for troubleshooting plugin issues:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Debug Flags"),": Enable debug output for filter and score results"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Metrics Collection"),": Monitor plugin execution duration and success rates"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Log Analysis"),": Examine detailed logs for plugin execution flow"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"API Inspection"),": Use the exposed REST APIs to inspect internal scheduler state")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Section sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/scheduler/frameworkext/framework_extender.go"},"framework_extender.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/webhook/server.go"},"server.go"))))}d.isMDXComponent=!0}}]);