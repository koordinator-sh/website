"use strict";(self.webpackChunkkoordinator_sh=self.webpackChunkkoordinator_sh||[]).push([[5723],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>u});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(n),h=a,u=m["".concat(l,".").concat(h)]||m[h]||d[h]||o;return n?r.createElement(u,i(i({ref:t},p),{},{components:n})):r.createElement(u,i({ref:t},p))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},603:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={},i="Client Libraries",s={unversionedId:"api-reference/client-libraries",id:"api-reference/client-libraries",title:"Client Libraries",description:"This document is generated with assistance from Qoder AI.",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/current/api-reference/client-libraries.md",sourceDirName:"api-reference",slug:"/api-reference/client-libraries",permalink:"/zh-Hans/docs/next/api-reference/client-libraries",draft:!1,editUrl:"https://github.com/koordinator-sh/koordinator.sh/edit/main/docs/api-reference/client-libraries.md",tags:[],version:"current",lastUpdatedBy:"Frame",lastUpdatedAt:1760590662,formattedLastUpdatedAt:"2025\u5e7410\u670816\u65e5",frontMatter:{},sidebar:"docs",previous:{title:"Custom Resource Definitions",permalink:"/zh-Hans/docs/next/api-reference/custom-resource-definitions"},next:{title:"Metrics Endpoints",permalink:"/zh-Hans/docs/next/api-reference/metrics-endpoints"}},l={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Clientset Architecture",id:"clientset-architecture",level:2},{value:"CRUD Operations with Typed Clients",id:"crud-operations-with-typed-clients",level:2},{value:"Informer Pattern Implementation",id:"informer-pattern-implementation",level:2},{value:"Lister Interfaces for Cache Queries",id:"lister-interfaces-for-cache-queries",level:2},{value:"Shared Informer Management",id:"shared-informer-management",level:2},{value:"Delegation, Rate Limiting, and Retry Mechanisms",id:"delegation-rate-limiting-and-retry-mechanisms",level:2},{value:"DeepCopy Methods and Thread Safety",id:"deepcopy-methods-and-thread-safety",level:2},{value:"Integration with controller-runtime",id:"integration-with-controller-runtime",level:2},{value:"Best Practices and Common Patterns",id:"best-practices-and-common-patterns",level:2}],p={toc:c},m="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"client-libraries"},"Client Libraries"),(0,a.kt)("admonition",{title:"\u6587\u6863\u8bf4\u660e",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"This document is generated with assistance from Qoder AI.")),(0,a.kt)("h2",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,"This document provides comprehensive documentation for Koordinator's Go client libraries, which enable programmatic interaction with Koordinator's custom resources. The client libraries support standard Kubernetes-style operations for creating, reading, updating, and deleting Custom Resource Definitions (CRDs), including Recommendations, Reservations, and NodeMetrics. The architecture leverages Kubernetes client-go patterns with specialized extensions for efficient event-driven programming through informers and cache synchronization. This documentation covers the full spectrum of client functionality, from basic CRUD operations to advanced patterns involving shared informers, listers, and integration with controller-runtime for building custom controllers."),(0,a.kt)("h2",{id:"clientset-architecture"},"Clientset Architecture"),(0,a.kt)("p",null,"The Koordinator clientset provides a unified interface for accessing all Koordinator custom resources through versioned API groups. The architecture follows Kubernetes client-go conventions with typed clients for each API group."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-mermaid"},'classDiagram\nclass Clientset {\n+*discovery.DiscoveryClient\n+analysisV1alpha1 *AnalysisV1alpha1Client\n+configV1alpha1 *ConfigV1alpha1Client\n+quotaV1alpha1 *QuotaV1alpha1Client\n+schedulingV1alpha1 *SchedulingV1alpha1Client\n+sloV1alpha1 *SloV1alpha1Client\n}\nclass AnalysisV1alpha1Client {\n+*rest.RESTClient\n+recommendations *RecommendationInterface\n}\nclass SchedulingV1alpha1Client {\n+*rest.RESTClient\n+reservations *ReservationInterface\n+podMigrationJobs *PodMigrationJobInterface\n}\nclass SloV1alpha1Client {\n+*rest.RESTClient\n+nodeMetrics *NodeMetricInterface\n+nodeSLOs *NodeSLOInterface\n}\nClientset --\x3e AnalysisV1alpha1Client : "has"\nClientset --\x3e SchedulingV1alpha1Client : "has"\nClientset --\x3e SloV1alpha1Client : "has"\nAnalysisV1alpha1Client --\x3e RecommendationInterface : "implements"\nSchedulingV1alpha1Client --\x3e ReservationInterface : "implements"\nSloV1alpha1Client --\x3e NodeMetricInterface : "implements"\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Diagram sources")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/clientset/versioned/clientset.go#L44-L51"},"clientset.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/clientset/versioned/typed/analysis/v1alpha1/analysis_client.go"},"analysis_client.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/clientset/versioned/typed/scheduling/v1alpha1/scheduling_client.go"},"scheduling_client.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/clientset/versioned/typed/slo/v1alpha1/slo_client.go"},"slo_client.go"))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Section sources")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/clientset/versioned/clientset.go#L44-L148"},"clientset.go"))),(0,a.kt)("h2",{id:"crud-operations-with-typed-clients"},"CRUD Operations with Typed Clients"),(0,a.kt)("p",null,"The clientset provides typed interfaces for performing CRUD operations on Koordinator custom resources. Each API group has its own client that exposes resource-specific operations through interface methods."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-mermaid"},"sequenceDiagram\nparticipant App as Application\nparticipant Clientset as KoordinatorClientset\nparticipant REST as RESTClient\nparticipant API as KubernetesAPI\nApp->>Clientset : NewForConfig(config)\nClientset->>Clientset : Initialize clients for all API groups\nClientset--\x3e>App : Return Clientset\nApp->>Clientset : Get SLO client\nClientset--\x3e>App : Return SloV1alpha1Client\nApp->>REST : Create NodeMetric\nREST->>API : POST /apis/slo.koordinator.sh/v1alpha1/nodemetrics\nAPI--\x3e>REST : Return created resource\nREST--\x3e>App : Return NodeMetric object\nApp->>REST : Update NodeMetric\nREST->>API : PUT /apis/slo.koordinator.sh/v1alpha1/nodemetrics/nodename\nAPI--\x3e>REST : Return updated resource\nREST--\x3e>App : Return updated NodeMetric\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Diagram sources")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/clientset/versioned/clientset.go#L91-L148"},"clientset.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/clientset/versioned/typed/slo/v1alpha1/nodemetric.go"},"nodemetric.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/clientset/versioned/typed/analysis/v1alpha1/recommendation.go"},"recommendation.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/clientset/versioned/typed/scheduling/v1alpha1/reservation.go"},"reservation.go"))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Section sources")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/clientset/versioned/clientset.go#L91-L148"},"clientset.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/clientset/versioned/typed/slo/v1alpha1/nodemetric.go#L30-L150"},"nodemetric.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/clientset/versioned/typed/analysis/v1alpha1/recommendation.go#L30-L150"},"recommendation.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/clientset/versioned/typed/scheduling/v1alpha1/reservation.go#L30-L150"},"reservation.go"))),(0,a.kt)("h2",{id:"informer-pattern-implementation"},"Informer Pattern Implementation"),(0,a.kt)("p",null,"The informer pattern enables efficient event-driven programming by maintaining a local cache of Koordinator resources and notifying controllers of changes. Informers watch resources and keep a synchronized cache, reducing direct API server calls."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-mermaid"},'classDiagram\nclass SharedInformerFactory {\n+client versioned.Interface\n+defaultResync time.Duration\n+informers map[reflect.Type]SharedIndexInformer\n+startedInformers map[reflect.Type]bool\n}\nclass NodeMetricInformer {\n+Informer() cache.SharedIndexInformer\n+Lister() NodeMetricLister\n}\nclass ReservationInformer {\n+Informer() cache.SharedIndexInformer\n+Lister() ReservationLister\n}\nclass RecommendationInformer {\n+Informer() cache.SharedIndexInformer\n+Lister() RecommendationLister\n}\nclass SharedIndexInformer {\n+AddEventHandler(handler ResourceEventHandler)\n+GetStore() Store\n+GetController() Controller\n}\nSharedInformerFactory --\x3e NodeMetricInformer : "creates"\nSharedInformerFactory --\x3e ReservationInformer : "creates"\nSharedInformerFactory --\x3e RecommendationInformer : "creates"\nNodeMetricInformer --\x3e SharedIndexInformer : "implements"\nReservationInformer --\x3e SharedIndexInformer : "implements"\nRecommendationInformer --\x3e SharedIndexInformer : "implements"\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Diagram sources")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/informers/externalversions/factory.go#L219-L254"},"factory.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/informers/externalversions/slo/v1alpha1/nodemetric.go#L36-L39"},"nodemetric.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/informers/externalversions/scheduling/v1alpha1/reservation.go#L36-L39"},"reservation.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/informers/externalversions/analysis/v1alpha1/recommendation.go#L36-L39"},"recommendation.go"))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Section sources")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/informers/externalversions/factory.go#L87-L116"},"factory.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/informers/externalversions/slo/v1alpha1/nodemetric.go#L36-L39"},"nodemetric.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/informers/externalversions/scheduling/v1alpha1/reservation.go#L36-L39"},"reservation.go"))),(0,a.kt)("h2",{id:"lister-interfaces-for-cache-queries"},"Lister Interfaces for Cache Queries"),(0,a.kt)("p",null,"Lister interfaces provide read-only access to the local cache maintained by informers, enabling efficient querying of Koordinator resources without direct API server calls. Listers return objects that must be treated as read-only to maintain cache consistency."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-mermaid"},'classDiagram\nclass NodeMetricLister {\n+List(selector labels.Selector) []*NodeMetric\n+Get(name string) *NodeMetric\n+NodeMetricListerExpansion\n}\nclass ReservationLister {\n+List(selector labels.Selector) []*Reservation\n+Get(name string) *Reservation\n+ReservationListerExpansion\n}\nclass RecommendationLister {\n+List(selector labels.Selector) []*Recommendation\n+Recommendations(namespace string) RecommendationNamespaceLister\n+RecommendationListerExpansion\n}\nclass RecommendationNamespaceLister {\n+List(selector labels.Selector) []*Recommendation\n+Get(name string) *Recommendation\n}\nNodeMetricLister <|-- NodeMetricInformer : "provides"\nReservationLister <|-- ReservationInformer : "provides"\nRecommendationLister <|-- RecommendationInformer : "provides"\nRecommendationLister --\x3e RecommendationNamespaceLister : "creates"\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Diagram sources")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/listers/slo/v1alpha1/nodemetric.go#L29-L37"},"nodemetric_list.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/listers/scheduling/v1alpha1/reservation.go#L29-L37"},"reservation_list.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/listers/analysis/v1alpha1/recommendation.go#L29-L36"},"recommendation_list.go"))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Section sources")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/listers/slo/v1alpha1/nodemetric.go#L29-L37"},"nodemetric_list.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/listers/scheduling/v1alpha1/reservation.go#L29-L37"},"reservation_list.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/listers/analysis/v1alpha1/recommendation.go#L29-L36"},"recommendation_list.go"))),(0,a.kt)("h2",{id:"shared-informer-management"},"Shared Informer Management"),(0,a.kt)("p",null,"Shared informer factories enable multiple controllers to share a single informer instance, reducing resource consumption and API server load. The factory manages the lifecycle of informers and ensures cache consistency across controllers."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-mermaid"},'flowchart TD\nStart([Create SharedInformerFactory]) --\x3e Configure["Configure with client and resync period"]\nConfigure --\x3e Create["Create informer for specific resource"]\nCreate --\x3e Start["Start informer with stop channel"]\nStart --\x3e Sync["WaitForCacheSync"]\nSync --\x3e Ready["Informer ready for use"]\nReady --\x3e Query["Use Lister to query cache"]\nReady --\x3e Watch["Add event handlers for create/update/delete"]\nWatch --\x3e Process["Process events in controller logic"]\nQuery --\x3e Process\nProcess --\x3e End([Handle resource changes])\nstyle Start fill:#f9f,stroke:#333\nstyle End fill:#f9f,stroke:#333\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Diagram sources")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/informers/externalversions/factory.go#L87-L116"},"factory.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/informers/externalversions/factory.go#L219-L254"},"factory.go"))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Section sources")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/informers/externalversions/factory.go#L87-L116"},"factory.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/informers/externalversions/factory.go#L219-L254"},"factory.go"))),(0,a.kt)("h2",{id:"delegation-rate-limiting-and-retry-mechanisms"},"Delegation, Rate Limiting, and Retry Mechanisms"),(0,a.kt)("p",null,"The Koordinator client architecture implements delegation patterns with built-in rate limiting and retry mechanisms to ensure reliable communication with the Kubernetes API server while respecting cluster resource constraints."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-mermaid"},'flowchart LR\nA[Application] --\x3e B[Delegating Client]\nB --\x3e C[Rate Limiter]\nC --\x3e D[Retry Mechanism]\nD --\x3e E[Kubernetes API Server]\nE --\x3e F[Response]\nF --\x3e D\nD --\x3e C\nC --\x3e B\nB --\x3e A\nsubgraph "Client-Side Controls"\nC\nD\nend\nstyle C fill:#e6f3ff,stroke:#333\nstyle D fill:#e6f3ff,stroke:#333\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Diagram sources")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/clientset/versioned/clientset.go#L111-L148"},"clientset.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/generic_client.go"},"generic_client.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/registry.go"},"registry.go"))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Section sources")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/clientset/versioned/clientset.go#L111-L148"},"clientset.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/generic_client.go"},"generic_client.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/registry.go"},"registry.go"))),(0,a.kt)("h2",{id:"deepcopy-methods-and-thread-safety"},"DeepCopy Methods and Thread Safety"),(0,a.kt)("p",null,"All Koordinator custom resource types include generated DeepCopy methods that enable safe copying of objects in concurrent environments. These methods ensure thread safety when working with cached objects from informers."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-mermaid"},'classDiagram\nclass Recommendation {\n+DeepCopy() *Recommendation\n+DeepCopyInto(*Recommendation)\n+DeepCopyObject() runtime.Object\n}\nclass Reservation {\n+DeepCopy() *Reservation\n+DeepCopyInto(*Reservation)\n+DeepCopyObject() runtime.Object\n}\nclass NodeMetric {\n+DeepCopy() *NodeMetric\n+DeepCopyInto(*NodeMetric)\n+DeepCopyObject() runtime.Object\n}\nclass DeepCopyInterface {\n+DeepCopy() interface{}\n+DeepCopyInto(interface{})\n}\nRecommendation --\x3e DeepCopyInterface : "implements"\nReservation --\x3e DeepCopyInterface : "implements"\nNodeMetric --\x3e DeepCopyInterface : "implements"\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Diagram sources")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/apis/analysis/v1alpha1/zz_generated.deepcopy.go"},"zz_generated.deepcopy.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/apis/scheduling/v1alpha1/zz_generated.deepcopy.go"},"zz_generated.deepcopy.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/apis/slo/v1alpha1/zz_generated.deepcopy.go"},"zz_generated.deepcopy.go"))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Section sources")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/apis/analysis/v1alpha1/recommendation_types.go"},"recommendation_types.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/apis/scheduling/v1alpha1/reservation_types.go"},"reservation_types.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/apis/slo/v1alpha1/nodemetric_types.go"},"nodemetric_types.go"))),(0,a.kt)("h2",{id:"integration-with-controller-runtime"},"Integration with controller-runtime"),(0,a.kt)("p",null,"Koordinator clients can be seamlessly integrated with controller-runtime to build custom controllers that react to changes in Koordinator resources. The integration leverages the same informer and lister patterns while providing higher-level abstractions."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-mermaid"},"sequenceDiagram\nparticipant Manager as ControllerManager\nparticipant Builder as ControllerBuilder\nparticipant Reconciler as CustomReconciler\nparticipant Client as KoordinatorClient\nparticipant Cache as SharedInformerCache\nManager->>Builder : SetupWithManager\nBuilder->>Manager : Register Controller\nManager->>Cache : Start Shared Informers\nCache->>Cache : Synchronize caches\nloop Event Processing\nCache->>Reconciler : Trigger Reconcile(request)\nReconciler->>Client : Get resource from cache via Lister\nClient--\x3e>Reconciler : Return resource\nReconciler->>Client : Update resource status\nClient->>API : PATCH resource status\nAPI--\x3e>Client : Return updated resource\nClient--\x3e>Reconciler : Confirm update\nReconciler--\x3e>Manager : Return result\nend\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Diagram sources")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/clientset/versioned/clientset.go"},"clientset.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/informers/externalversions/factory.go"},"factory.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/registry.go"},"registry.go"))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Section sources")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/clientset/versioned/clientset.go"},"clientset.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/informers/externalversions/factory.go"},"factory.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/registry.go"},"registry.go"))),(0,a.kt)("h2",{id:"best-practices-and-common-patterns"},"Best Practices and Common Patterns"),(0,a.kt)("p",null,"When working with Koordinator client libraries, several best practices ensure efficient and reliable operation:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-mermaid"},"flowchart TD\nA[Initialize Clientset] --\x3e B[Create SharedInformerFactory]\nB --\x3e C[Get Informer for Resource]\nC --\x3e D[Add Event Handlers]\nD --\x3e E[Start Informer]\nE --\x3e F[WaitForCacheSync]\nF --\x3e G[Use Lister for Queries]\nG --\x3e H[Handle Events with Reconciliation]\nH --\x3e I[Use DeepCopy when modifying objects]\nI --\x3e J[Handle Resource Version Conflicts]\nJ --\x3e K[Implement Proper Error Handling]\nK --\x3e L[Shutdown Gracefully]\nstyle A fill:#d4edda,stroke:#333\nstyle L fill:#d4edda,stroke:#333\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Diagram sources")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/clientset/versioned/clientset.go"},"clientset.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/informers/externalversions/factory.go"},"factory.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/generic_client.go"},"generic_client.go"))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Section sources")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/clientset/versioned/clientset.go"},"clientset.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/informers/externalversions/factory.go"},"factory.go")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/client/generic_client.go"},"generic_client.go"))))}d.isMDXComponent=!0}}]);