"use strict";(self.webpackChunkkoordinator_sh=self.webpackChunkkoordinator_sh||[]).push([[1703],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>k});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var m=r.createContext({}),c=function(e){var n=r.useContext(m),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(m.Provider,{value:n},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,m=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=c(t),p=o,k=s["".concat(m,".").concat(p)]||s[p]||d[p]||a;return t?r.createElement(k,i(i({ref:n},u),{},{components:t})):r.createElement(k,i({ref:n},u))}));function k(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=p;var l={};for(var m in n)hasOwnProperty.call(n,m)&&(l[m]=n[m]);l.originalType=e,l[s]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},45649:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=t(87462),o=(t(67294),t(3905));const a={},i="\u8bbe\u5907\u8c03\u5ea6 - \u5bd2\u6b66\u7eaa MLU",l={unversionedId:"user-manuals/device-scheduling-cambricon-mlu",id:"version-v1.7/user-manuals/device-scheduling-cambricon-mlu",title:"\u8bbe\u5907\u8c03\u5ea6 - \u5bd2\u6b66\u7eaa MLU",description:"\u80cc\u666f",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/version-v1.7/user-manuals/device-scheduling-cambricon-mlu.md",sourceDirName:"user-manuals",slug:"/user-manuals/device-scheduling-cambricon-mlu",permalink:"/zh-Hans/docs/user-manuals/device-scheduling-cambricon-mlu",draft:!1,editUrl:"https://github.com/koordinator-sh/koordinator.sh/edit/main/docs/user-manuals/device-scheduling-cambricon-mlu.md",tags:[],version:"v1.7",lastUpdatedBy:"\u4e54\u666e",lastUpdatedAt:1761882390,formattedLastUpdatedAt:"2025\u5e7410\u670831\u65e5",frontMatter:{},sidebar:"docs",previous:{title:"\u8bbe\u5907\u8c03\u5ea6 - \u534e\u4e3a\u6607\u817e NPU",permalink:"/zh-Hans/docs/user-manuals/device-scheduling-ascend-npu"},next:{title:"\u589e\u5f3a\u7684 NodeResourceFit",permalink:"/zh-Hans/docs/user-manuals/node-resource-fit-plus-scoring"}},m={},c=[{value:"\u80cc\u666f",id:"\u80cc\u666f",level:2},{value:"\u4f7f\u7528\u65b9\u6cd5",id:"\u4f7f\u7528\u65b9\u6cd5",level:2},{value:"\u524d\u7f6e\u6761\u4ef6",id:"\u524d\u7f6e\u6761\u4ef6",level:3},{value:"\u4f7f\u7528",id:"\u4f7f\u7528",level:3}],u={toc:c},s="wrapper";function d(e){let{components:n,...t}=e;return(0,o.kt)(s,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"\u8bbe\u5907\u8c03\u5ea6---\u5bd2\u6b66\u7eaa-mlu"},"\u8bbe\u5907\u8c03\u5ea6 - \u5bd2\u6b66\u7eaa MLU"),(0,o.kt)("h2",{id:"\u80cc\u666f"},"\u80cc\u666f"),(0,o.kt)("p",null,"\u5f53\u524d Koordinator \u652f\u6301\u5bd2\u6b66\u7eaa\u5361\u5728 K8s \u7684\u4f7f\u7528\uff0c\u57fa\u4e8e koord-device-daemon \u548c koordlet \u7ec4\u4ef6\u4e0a\u62a5\u5f02\u6784 GPU \u8d44\u6e90\uff0c\u5c06\u5f02\u6784\u5361\u4fe1\u606f\u6c47\u603b\u5230 Device \u4e2d\u4f9b\u8c03\u5ea6\u5668\u8fdb\u884c\u62d3\u6251\u8c03\u5ea6\u3002"),(0,o.kt)("h2",{id:"\u4f7f\u7528\u65b9\u6cd5"},"\u4f7f\u7528\u65b9\u6cd5"),(0,o.kt)("h3",{id:"\u524d\u7f6e\u6761\u4ef6"},"\u524d\u7f6e\u6761\u4ef6"),(0,o.kt)("p",null,"\u6607\u817e\u5361\u7684\u4f7f\u7528\u9700\u8981\u63d0\u524d\u5b89\u88c5\u914d\u7f6e\u5982\u4e0b\u7ec4\u4ef6"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u5bd2\u6b66\u7eaa Driver"),(0,o.kt)("li",{parentName:"ul"},"\u5bd2\u6b66\u7eaa ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/Cambricon/cambricon-k8s-device-plugin"},"Cambricon Device Plugin (\u5f00\u542f\u865a\u62df\u5316\u53c2\u6570\u914d\u7f6e)"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"dynamic-smlu \u542f\u52a8\u53c2\u6570","dynamic-smlu":!0,"\u542f\u52a8\u53c2\u6570":!0},'args:\n  - --mode=dynamic-smlu # device plugin mode: default, dynamic-smlu, env-share, mim, topology-aware\n  - --virtualization-num=1 # virtualization number for each MLU, used only in env-share mode, set to 110 to support multi cards per container in env-share mode\n  - --mlulink-policy=best-effort # MLULink topology policy: best-effort, guaranteed or restricted, used only in topology-aware mode\n  - --cnmon-path=/usr/bin/cnmon # host machine cnmon path, must be absolute path. comment out this line to avoid mounting cnmon\n  - --log-level=info # log level: trace/debug/info/warn/error/fatal/panic" default:"info"\n  - --min-dsmlu-unit=256 # minimum unit for dsmu, used only in dynamic-smlu mode" default:"0" env:"MIN-DSMLU-UNIT"\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Koordinator \u76f8\u5173\u7ec4\u4ef6(koordinator >= v1.7.0)",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"\u9700\u8981\u5728 chart \u7684 ",(0,o.kt)("inlineCode",{parentName:"li"},"scheduler.featureGates")," \u53c2\u6570\u4e2d\u52a0\u5165 ",(0,o.kt)("inlineCode",{parentName:"li"},"DevicePluginAdaption=true")," \u4ee5\u542f\u7528\u8be5\u529f\u80fd\u6240\u9700\u7684\u7279\u6027\u95e8\u63a7")))),(0,o.kt)("h3",{id:"\u4f7f\u7528"},"\u4f7f\u7528"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"\u786e\u8ba4\u5bd2\u6b66\u7eaa\u5361\u5df2\u6210\u529f\u88ab Device \u8bc6\u522b\uff0c\u793a\u4f8b\u5982\u4e0b\uff0c\u901a\u8fc7 ",(0,o.kt)("inlineCode",{parentName:"li"},"kubectl get device <node-name> -o yaml")," \u67e5\u770b Device \u8d44\u6e90\u3002\n\u6ce8\u610f\uff1a",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"node.koordinator.sh/gpu-vendor \u5bf9\u5e94\u7684\u6807\u7b7e\u503c\u4e3a cambricon")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: scheduling.koordinator.sh/v1alpha1\nkind: Device\nmetadata:\n  labels:\n    node.koordinator.sh/gpu-model: MLU-370 # The model of the Cambricon card.\n    node.koordinator.sh/gpu-vendor: cambricon # The vendor of the card.\n  name: node-1\nspec:\n  devices:\n  - health: true\n    id: 89033010-2354-0000-0000-000000000000 # The UUID of the Cambricon card (mocked value).\n    minor: 0 # The minor number of the Cambricon card.\n    resources:\n      koordinator.sh/gpu-core: "100" # The total compute capacity of the Cambricon card in percentage.\n      koordinator.sh/gpu-memory: 24Gi # The total GPU memory of the Cambricon card.\n      koordinator.sh/gpu-memory-ratio: "100" # The total GPU memory ratio in percentage.\n    topology:\n      busID: 0000:47:00.0 # The PCI bus ID.\n      nodeID: 3 # The NUMA node ID.\n      pcieID: pci0000:3a # The PCI root ID.\n      socketID: -1\n    type: gpu\n    conditions:\n    - lastTransitionTime: "2025-04-25T10:00:00Z"\n      message: device is healthy\n      reason: DeviceHealthy\n      status: "True"\n      type: Healthy\nstatus: {}\n')),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"\u786e\u8ba4\u5bd2\u6b66\u7eaa\u7684\u8282\u70b9\u4e0a\u5df2\u6b63\u786e\u6ce8\u518c\u5bd2\u6b66\u7eaa\u5361\u8d44\u6e90\u4fe1\u606f\uff0c\u793a\u4f8b\u5982\u4e0b\uff0c\u901a\u8fc7 ",(0,o.kt)("inlineCode",{parentName:"li"},"kubectl get node <node-name> -o yaml")," \u67e5\u770b node.status.allocatable/node.status.capacity \u8d44\u6e90\u3002")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: v1\nkind: Node\nmetadata:\n  name: node-1\n  ...\nstatus:\n    allocatable:\n      ...\n      koordinator.sh/gpu.shared: "100" # Report by koordinator\n      koordinator.sh/gpu-core: "100" # Report by koordinator\n      koordinator.sh/gpu-memory: 24Gi # Report by koordinator\n      koordinator.sh/gpu-memory-ratio: "100" # Report by koordinator\n      cambricon.com/mlu.smlu.vcore: "100" # Report by cambricon device plugin\n      cambricon.com/mlu.smlu.vmemory: "96" # Report by cambricon device plugin\n    capacity:\n      ...\n      koordinator.sh/gpu.shared: "100" # Report by koordinator\n      koordinator.sh/gpu-core: "100" # Report by koordinator\n      koordinator.sh/gpu-memory: 24Gi # Report by koordinator\n      koordinator.sh/gpu-memory-ratio: "100" # Report by koordinator\n      cambricon.com/mlu.smlu.vcore: "100" # Report by cambricon device plugin\n      cambricon.com/mlu.smlu.vmemory: "96" # Report by cambricon device plugin\n')),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"\u521b\u5efa Pod \u7533\u8bf7\u4f7f\u7528\u5bd2\u6b66\u7eaa\u5361\uff0c\u6837\u4f8b\u5982\u4e0b\uff0c\u793a\u4f8b\u4e2d\u7533\u8bf7\u4e86\u865a\u62df\u5361\u573a\u666f\u3002",(0,o.kt)("strong",{parentName:"li"},"\u5bd2\u6b66\u7eaa\u4e0d\u652f\u6301\u914d\u7f6e\u591a\u5361\u865a\u62df\u5316"),"\u3002")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u6ce8\u610f",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"\u6b64\u5904\u955c\u50cf\u4f7f\u7528\u4e86\u4e4c\u73ed\u56fe\u57fa\u7840\u955c\u50cf\uff0c\u7528\u6237\u53ef\u6839\u636e\u5b9e\u9645\u9700\u6c42\u9009\u62e9\u5408\u9002\u7684\u955c\u50cf"),(0,o.kt)("li",{parentName:"ul"},"resources.limits \u548c resources.requests \u4e2d\u5747\u9700\u8981\u989d\u5916\u914d\u7f6e\u8d44\u6e90",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"\u865a\u62df\u5361\u573a\u666f\uff0c\u4ee5 MLU-370 \u4f7f\u7528\u865a\u62df\u5316\u4e3a\u4f8b\u3002",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"koordinator.sh/gpu.shared",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"\u4f7f\u7528\u865a\u62df\u5361\u586b\u5199 1 \u5373\u53ef\u3002"))),(0,o.kt)("li",{parentName:"ul"},"koordinator.sh/gpu-core",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"\u7528\u591a\u5c11\u7b97\u529b\uff0c\u586b\u5199\u591a\u5c11\u5373\u53ef\uff0c\u767e\u5206\u6bd4\u8868\u793a\u3002"))),(0,o.kt)("li",{parentName:"ul"},"cambricon.com/mlu.smlu.vcore",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"\u7528\u591a\u5c11\u7b97\u529b\uff0c\u586b\u5199\u591a\u5c11\u5373\u53ef\uff0c\u767e\u5206\u6bd4\u8868\u793a\u3002"))),(0,o.kt)("li",{parentName:"ul"},"cambricon.com/mlu.smlu.vmemory",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"\u7528\u591a\u5c11\u663e\u5b58\uff0c\u6bd4\u5982 1GB\uff0c\u9700\u8981\u6362\u7b97\uff0c\u586b\u5199\u5206\u7247\u7684\u6570\u91cf\u3002\u4ee5\u6bcf\u4e2a\u5206\u7247\u4e3a 256Mi \u4e3a\u4f8b\uff0c\u5206\u7247\u5927\u5c0f\u5728 Cambricon Device Plugin \u7684 ",(0,o.kt)("inlineCode",{parentName:"li"},"min-dsmlu-unit"),"\u4e2d\u914d\u7f6e\u3002 ",(0,o.kt)("inlineCode",{parentName:"li"},"slice_count = 1GB / 256Mi "),"\u3002")))))))))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"partial-card","partial-card":!0},'apiVersion: v1\nkind: Pod\nmetadata:\n  labels:\n    app: demo-sleep\n  name: test-cambricon-partial\n  namespace: default\nspec:\n  containers:\n  - command:\n    - sleep\n    - infinity\n    image: ubuntu:18.04\n    imagePullPolicy: IfNotPresent\n    name: demo-sleep\n    resources:\n      limits:\n        cpu: "32"\n        memory: 64Gi\n        koordinator.sh/gpu.shared: "1"\n        koordinator.sh/gpu-memory: "1Gi"\n        koordinator.sh/gpu-core: "10"\n        cambricon.com/mlu.smlu.vcore: "10" # percentage\n        cambricon.com/mlu.smlu.vmemory: "4" # slice counts, actual allocated memory: 4*256Mi=1Gi\n      requests:\n        cpu: "32"\n        memory: 64Gi\n        koordinator.sh/gpu.shared: "1"\n        koordinator.sh/gpu-memory: "1Gi"\n        koordinator.sh/gpu-core: "10"\n        cambricon.com/mlu.smlu.vcore: "10" \n        cambricon.com/mlu.smlu.vmemory: "4" \n')),(0,o.kt)("ol",{start:4},(0,o.kt)("li",{parentName:"ol"},"\u8fdb\u5165\u5bb9\u5668\u5185\u90e8(",(0,o.kt)("inlineCode",{parentName:"li"},"kubectl exec -it {pod-name} --bash"),")\uff0c\u5728\u5bb9\u5668\u5185\u90e8\u6267\u884c ",(0,o.kt)("inlineCode",{parentName:"li"},"ls /dev/cambricon*")," \u547d\u4ee4\u67e5\u770b\u5361\u6302\u8f7d\u60c5\u51b5\u3002\u5982\u679c\u80fd\u591f\u6b63\u5e38\u8f93\u51fa\uff0c\u8868\u793a\u5361\u5df2\u7ecf\u6210\u529f\u5206\u914d\u5230 Pod \u4e2d\u3002")))}d.isMDXComponent=!0}}]);