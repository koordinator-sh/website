"use strict";(self.webpackChunkkoordinator_sh=self.webpackChunkkoordinator_sh||[]).push([[1944],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>h});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(r),p=o,h=u["".concat(l,".").concat(p)]||u[p]||m[p]||a;return r?n.createElement(h,i(i({ref:t},d),{},{components:r})):n.createElement(h,i({ref:t},d))}));function h(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},9543:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var n=r(7462),o=(r(7294),r(3905));const a={},i="Metrics Endpoints",s={unversionedId:"api-reference/metrics-endpoints",id:"api-reference/metrics-endpoints",title:"Metrics Endpoints",description:"This document is generated with assistance from Qoder AI.",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/current/api-reference/metrics-endpoints.md",sourceDirName:"api-reference",slug:"/api-reference/metrics-endpoints",permalink:"/zh-Hans/docs/next/api-reference/metrics-endpoints",draft:!1,editUrl:"https://github.com/koordinator-sh/koordinator.sh/edit/main/docs/api-reference/metrics-endpoints.md",tags:[],version:"current",lastUpdatedBy:"Frame",lastUpdatedAt:1760590662,formattedLastUpdatedAt:"2025\u5e7410\u670816\u65e5",frontMatter:{},sidebar:"docs",previous:{title:"Client Libraries",permalink:"/zh-Hans/docs/next/api-reference/client-libraries"},next:{title:"Webhook Endpoints",permalink:"/zh-Hans/docs/next/api-reference/webhook-endpoints"}},l={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Component Metrics Endpoints",id:"component-metrics-endpoints",level:2},{value:"Koordlet Metrics",id:"koordlet-metrics",level:2},{value:"Resource Utilization Metrics",id:"resource-utilization-metrics",level:3},{value:"Performance and QoS Metrics",id:"performance-and-qos-metrics",level:3},{value:"Koord-scheduler Metrics",id:"koord-scheduler-metrics",level:2},{value:"Scheduling Performance Metrics",id:"scheduling-performance-metrics",level:3},{value:"Reservation and Quota Metrics",id:"reservation-and-quota-metrics",level:3},{value:"Koord-descheduler Metrics",id:"koord-descheduler-metrics",level:2},{value:"Pod Eviction Metrics",id:"pod-eviction-metrics",level:3},{value:"Koord-manager Metrics",id:"koord-manager-metrics",level:2},{value:"SLO Controller Metrics",id:"slo-controller-metrics",level:3},{value:"Metrics Collection and Configuration",id:"metrics-collection-and-configuration",level:2},{value:"Configuration Parameters",id:"configuration-parameters",level:3},{value:"Prometheus Queries and Alerting",id:"prometheus-queries-and-alerting",level:2},{value:"Key Prometheus Queries",id:"key-prometheus-queries",level:3},{value:"Alerting Rules",id:"alerting-rules",level:3},{value:"Metrics Stability and Versioning",id:"metrics-stability-and-versioning",level:2},{value:"Stability Levels",id:"stability-levels",level:3},{value:"Deprecation Policy",id:"deprecation-policy",level:3}],d={toc:c},u="wrapper";function m(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"metrics-endpoints"},"Metrics Endpoints"),(0,o.kt)("admonition",{title:"\u6587\u6863\u8bf4\u660e",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"This document is generated with assistance from Qoder AI.")),(0,o.kt)("h2",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"Koordinator exposes comprehensive Prometheus metrics through its various components to enable monitoring, observability, and performance analysis of the system. Each component (koord-manager, koord-scheduler, koordlet, and koord-descheduler) provides a /metrics HTTP endpoint that exports metrics in Prometheus format. These metrics cover various aspects of the system including scheduling performance, resource utilization, pod eviction statistics, and QoS enforcement. The metrics endpoints are secured and configured according to the component's deployment configuration, with specific port numbers and security requirements. This documentation provides a comprehensive overview of all exported metrics, their semantic meaning, and guidance on configuring and using these metrics for monitoring and alerting."),(0,o.kt)("h2",{id:"component-metrics-endpoints"},"Component Metrics Endpoints"),(0,o.kt)("p",null,"Each Koordinator component exposes metrics through a dedicated HTTP endpoint with specific port configurations and security settings. The metrics endpoints follow the standard Prometheus exposition format and are accessible via the /metrics path."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mermaid"},"graph TD\nA[Koord-manager] --\x3e B[/metrics<br/>Port: 8080]\nC[Koord-scheduler] --\x3e D[/metrics<br/>Port: 10251]\nE[Koordlet] --\x3e F[/metrics<br/>Port: 9808]\nG[Koord-descheduler] --\x3e H[/metrics<br/>Port: 10260]\nB --\x3e I[Metrics Collection]\nD --\x3e I\nF --\x3e I\nH --\x3e I\nI --\x3e J[Prometheus Server]\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Diagram sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/config/manager/manager.yaml"},"manager.yaml")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/config/manager/scheduler.yaml"},"scheduler.yaml")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/config/manager/descheduler.yaml"},"descheduler.yaml"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Section sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/config/manager/manager.yaml"},"manager.yaml")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/config/manager/scheduler.yaml"},"scheduler.yaml")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/config/manager/descheduler.yaml"},"descheduler.yaml"))),(0,o.kt)("h2",{id:"koordlet-metrics"},"Koordlet Metrics"),(0,o.kt)("p",null,"The koordlet component, running as a daemon on each node, exposes detailed metrics about node resource utilization, container performance, and system-level observations. These metrics are crucial for understanding the actual resource consumption and performance characteristics of workloads."),(0,o.kt)("h3",{id:"resource-utilization-metrics"},"Resource Utilization Metrics"),(0,o.kt)("p",null,"Koordlet collects and exposes various resource utilization metrics at both node and container levels, including CPU, memory, and specialized metrics like PSI (Pressure Stall Information)."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mermaid"},'classDiagram\nclass NodeResourceAllocatable {\n+string node\n+string resource\n+string unit\n+float64 value\n+help "the node allocatable of resources updated by koordinator"\n}\nclass ContainerResourceRequests {\n+string node\n+string resource\n+string unit\n+string pod_uid\n+string pod_name\n+string pod_namespace\n+string container_id\n+string container_name\n+float64 value\n+help "the container requests of resources updated by koordinator"\n}\nclass NodePredictedResourceReclaimable {\n+string node\n+string predictor\n+string resource\n+string unit\n+float64 value\n+help "the node reclaimable resources predicted by koordinator"\n}\nNodeResourceAllocatable --\x3e ContainerResourceRequests : "contains"\nNodeResourceAllocatable --\x3e NodePredictedResourceReclaimable : "relates to"\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Diagram sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/koordlet/metrics/resource_summary.go"},"metrics.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/koordlet/metrics/prediction.go"},"metrics.go"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Section sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/koordlet/metrics/metrics.go"},"metrics.go"))),(0,o.kt)("h3",{id:"performance-and-qos-metrics"},"Performance and QoS Metrics"),(0,o.kt)("p",null,"Koordlet exposes specialized metrics for performance monitoring and QoS enforcement, including CPU burst, core scheduling, and PSI metrics that help identify resource contention and performance bottlenecks."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mermaid"},'classDiagram\nclass ContainerScaledCFSBurstUS {\n+string node\n+string pod_namespace\n+string pod_name\n+string container_id\n+string container_name\n+float64 value\n+help "The maximum accumulated run-time(in microseconds) in container-level set by koordlet"\n}\nclass ContainerPSI {\n+string node\n+string container_id\n+string container_name\n+string pod_uid\n+string pod_name\n+string pod_namespace\n+string psi_resource_type\n+string psi_precision\n+string psi_degree\n+string cpu_full_supported\n+float64 value\n+help "Container psi collected by koordlet"\n}\nclass ContainerCoreSchedCookie {\n+string node\n+string pod_name\n+string pod_namespace\n+string pod_uid\n+string container_name\n+string container_id\n+string core_sched_group\n+string core_sched_cookie\n+float64 value\n+help "the core scheduling cookie of the container"\n}\nContainerScaledCFSBurstUS --\x3e ContainerPSI : "correlates with"\nContainerScaledCFSBurstUS --\x3e ContainerCoreSchedCookie : "influences"\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Diagram sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/koordlet/metrics/cpu_burst.go"},"metrics.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/koordlet/metrics/psi.go"},"metrics.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/koordlet/metrics/core_sched.go"},"metrics.go"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Section sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/koordlet/metrics/metrics.go"},"metrics.go"))),(0,o.kt)("h2",{id:"koord-scheduler-metrics"},"Koord-scheduler Metrics"),(0,o.kt)("p",null,"The koord-scheduler component extends the Kubernetes scheduler with additional scheduling capabilities and exposes metrics related to scheduling performance, reservation management, and plugin execution."),(0,o.kt)("h3",{id:"scheduling-performance-metrics"},"Scheduling Performance Metrics"),(0,o.kt)("p",null,"Koord-scheduler provides detailed metrics about the scheduling process, including latency, node evaluation statistics, and timeout information."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mermaid"},'classDiagram\nclass PodSchedulingEvaluatedNodes {\n+float64 value\n+help "The number of nodes the scheduler evaluated the pod against in the filtering phase and beyond when find the suggested node"\n+buckets exponential(1,2,24)\n}\nclass PodSchedulingFeasibleNodes {\n+float64 value\n+help "The number of of nodes out of the evaluated ones that fit the pod when find the suggested node"\n+buckets exponential(1,2,24)\n}\nclass SchedulingTimeout {\n+string profile\n+float64 value\n+help "The currently scheduled Pod exceeds the maximum acceptable time interval"\n}\nclass ElasticQuotaProcessLatency {\n+string operation\n+float64 value\n+help "elastic quota process latency in second"\n+buckets exponential(0.00001,2,24)\n}\nPodSchedulingEvaluatedNodes --\x3e PodSchedulingFeasibleNodes : "subset of"\nSchedulingTimeout --\x3e ElasticQuotaProcessLatency : "related to"\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Diagram sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/scheduler/metrics/metrics.go"},"metrics.go"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Section sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/scheduler/metrics/metrics.go"},"metrics.go"))),(0,o.kt)("h3",{id:"reservation-and-quota-metrics"},"Reservation and Quota Metrics"),(0,o.kt)("p",null,"The scheduler exposes metrics related to resource reservations and elastic quotas, which are essential for understanding resource allocation and utilization patterns."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mermaid"},'classDiagram\nclass ReservationStatusPhase {\n+string name\n+string phase\n+float64 value\n+help "The current number of reservations in each status phase (e.g. Pending, Available, Succeeded, Failed)"\n}\nclass ReservationResource {\n+string type\n+string name\n+string resource\n+string unit\n+float64 value\n+help "Resource metrics for a reservation, including allocatable, allocated, and utilization with unit."\n}\nclass WaitingGangGroupNumber {\n+float64 value\n+help "The number of GangGroups in Waiting"\n}\nReservationStatusPhase --\x3e ReservationResource : "contains"\nReservationStatusPhase --\x3e WaitingGangGroupNumber : "affects"\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Diagram sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/scheduler/metrics/metrics.go"},"metrics.go"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Section sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/scheduler/metrics/metrics.go"},"metrics.go"))),(0,o.kt)("h2",{id:"koord-descheduler-metrics"},"Koord-descheduler Metrics"),(0,o.kt)("p",null,"The koord-descheduler component is responsible for evicting pods to improve resource utilization and balance across the cluster. It exposes metrics about eviction activities and their outcomes."),(0,o.kt)("h3",{id:"pod-eviction-metrics"},"Pod Eviction Metrics"),(0,o.kt)("p",null,"The descheduler tracks all pod eviction activities, including successful evictions, failed attempts, and the strategies that triggered the evictions."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mermaid"},'classDiagram\nclass PodsEvicted {\n+string result\n+string strategy\n+string namespace\n+string node\n+float64 value\n+help "Number of evicted pods, by the result, by the strategy, by the namespace, by the node name. \'error\' result means a pod could not be evicted"\n}\nclass SecondaryDeviceNotWellPlannedNodes {\n+string node_name\n+float64 value\n+help "The number of secondary device not well planned"\n}\nPodsEvicted --\x3e SecondaryDeviceNotWellPlannedNodes : "correlates with"\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Diagram sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/descheduler/metrics/metrics.go"},"metrics.go"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Section sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/descheduler/metrics/metrics.go"},"metrics.go"))),(0,o.kt)("h2",{id:"koord-manager-metrics"},"Koord-manager Metrics"),(0,o.kt)("p",null,"The koord-manager component serves as the control plane for Koordinator, managing various controllers and webhook configurations. It exposes metrics related to SLO (Service Level Objective) enforcement and controller operations."),(0,o.kt)("h3",{id:"slo-controller-metrics"},"SLO Controller Metrics"),(0,o.kt)("p",null,"The SLO controller within koord-manager tracks various reconciliation activities and resource management operations."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mermaid"},'classDiagram\nclass NodeMetricReconcileCount {\n+string node\n+string status\n+string reason\n+float64 value\n+help "The count of node metric reconciliations"\n}\nclass NodeResourceReconcileCount {\n+string node\n+string status\n+string reason\n+float64 value\n+help "The count of node resource reconciliations"\n}\nclass NodeSLOReconcileCount {\n+string node\n+string status\n+string reason\n+float64 value\n+help "The count of node SLO reconciliations"\n}\nNodeMetricReconcileCount --\x3e NodeResourceReconcileCount : "occurs with"\nNodeResourceReconcileCount --\x3e NodeSLOReconcileCount : "leads to"\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Diagram sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/slo-controller/metrics/metrics.go"},"metrics.go"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Section sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/slo-controller/metrics/metrics.go"},"metrics.go"))),(0,o.kt)("h2",{id:"metrics-collection-and-configuration"},"Metrics Collection and Configuration"),(0,o.kt)("p",null,"Koordlet includes a built-in metric cache system that collects, stores, and exposes metrics with configurable retention and collection intervals. This system uses TSDB (Time Series Database) storage for efficient time-series data management."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mermaid"},"flowchart TD\nA[Metric Collection] --\x3e B[In-Memory Buffer]\nB --\x3e C{TSDB Storage}\nC --\x3e D[Data Persistence]\nC --\x3e E[Prometheus Export]\nF[Configuration] --\x3e G[MetricGCIntervalSeconds]\nF --\x3e H[MetricExpireSeconds]\nF --\x3e I[TSDBRetentionDuration]\nG --\x3e C\nH --\x3e C\nI --\x3e C\nJ[Prometheus] --\x3e E\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Diagram sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/koordlet/metriccache/config.go"},"config.go"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Section sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/koordlet/metriccache/config.go"},"config.go"))),(0,o.kt)("h3",{id:"configuration-parameters"},"Configuration Parameters"),(0,o.kt)("p",null,"The metric collection system can be configured with various parameters to control the behavior of metric collection, storage, and garbage collection."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,o.kt)("th",{parentName:"tr",align:null},"Default Value"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"MetricGCIntervalSeconds"),(0,o.kt)("td",{parentName:"tr",align:null},"300"),(0,o.kt)("td",{parentName:"tr",align:null},"Interval in seconds for collecting expired metrics")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"MetricExpireSeconds"),(0,o.kt)("td",{parentName:"tr",align:null},"1800"),(0,o.kt)("td",{parentName:"tr",align:null},"Duration in seconds after which metrics expire")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"TSDBPath"),(0,o.kt)("td",{parentName:"tr",align:null},"/metric-data/"),(0,o.kt)("td",{parentName:"tr",align:null},"Base path for metric data storage")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"TSDBRetentionDuration"),(0,o.kt)("td",{parentName:"tr",align:null},"12h"),(0,o.kt)("td",{parentName:"tr",align:null},"Duration of persisted data to keep")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"TSDBEnablePromMetrics"),(0,o.kt)("td",{parentName:"tr",align:null},"true"),(0,o.kt)("td",{parentName:"tr",align:null},"Enable Prometheus metrics for TSDB")))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Section sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/koordlet/metriccache/config.go"},"config.go"))),(0,o.kt)("h2",{id:"prometheus-queries-and-alerting"},"Prometheus Queries and Alerting"),(0,o.kt)("p",null,"Effective monitoring of Koordinator requires well-crafted Prometheus queries and alerting rules to detect and respond to potential issues in the system."),(0,o.kt)("h3",{id:"key-prometheus-queries"},"Key Prometheus Queries"),(0,o.kt)("p",null,"The following queries are essential for monitoring the health and performance of Koordinator components:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-promql"},'# Scheduling latency by percentile\nhistogram_quantile(0.95, sum(rate(koord_scheduler_pod_scheduling_evaluated_nodes_bucket[5m])) by (le))\n\n# Pod eviction rate by strategy\nsum by (strategy) (rate(koord_descheduler_pods_evicted_total[5m]))\n\n# Node resource utilization\nkoordlet_node_resource_allocatable{resource="cpu", unit="core"} - koordlet_node_resource_used{resource="cpu", unit="core"}\n\n# QoS violation rate\nsum(koordlet_container_psi{psi_degree="full", psi_precision="avg10"}) by (node) / count(koordlet_container_psi) by (node)\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Section sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/koordlet/metrics/metrics.go"},"metrics.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/scheduler/metrics/metrics.go"},"metrics.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/descheduler/metrics/metrics.go"},"metrics.go"))),(0,o.kt)("h3",{id:"alerting-rules"},"Alerting Rules"),(0,o.kt)("p",null,"The following alerting rules can be configured to proactively detect issues in the Koordinator system:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'# High scheduling latency\n- alert: HighSchedulingLatency\n  expr: histogram_quantile(0.95, sum(rate(koord_scheduler_pod_scheduling_evaluated_nodes_bucket[5m])) by (le)) > 10\n  for: 5m\n  labels:\n    severity: warning\n  annotations:\n    summary: "High scheduling latency detected"\n    description: "The 95th percentile scheduling latency is above 10 seconds"\n\n# High pod eviction rate\n- alert: HighPodEvictionRate\n  expr: sum(rate(koord_descheduler_pods_evicted_total[5m])) > 10\n  for: 10m\n  labels:\n    severity: warning\n  annotations:\n    summary: "High pod eviction rate detected"\n    description: "The pod eviction rate is above 10 evictions per minute"\n\n# Node resource exhaustion\n- alert: NodeResourceExhaustion\n  expr: (koordlet_node_resource_allocatable{resource="memory", unit="byte"} - koordlet_node_resource_used{resource="memory", unit="byte"}) / koordlet_node_resource_allocatable{resource="memory", unit="byte"} < 0.1\n  for: 15m\n  labels:\n    severity: critical\n  annotations:\n    summary: "Node memory exhaustion detected"\n    description: "Node memory usage is above 90% for more than 15 minutes"\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Section sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/koordlet/metrics/metrics.go"},"metrics.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/scheduler/metrics/metrics.go"},"metrics.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/descheduler/metrics/metrics.go"},"metrics.go"))),(0,o.kt)("h2",{id:"metrics-stability-and-versioning"},"Metrics Stability and Versioning"),(0,o.kt)("p",null,"Koordinator follows a structured approach to metrics stability and versioning to ensure backward compatibility and predictable behavior for monitoring systems."),(0,o.kt)("h3",{id:"stability-levels"},"Stability Levels"),(0,o.kt)("p",null,"Metrics are classified into different stability levels based on their maturity and expected stability:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"STABLE"),": Metrics that are considered stable and will not be changed in backward-incompatible ways"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"ALPHA"),": Experimental metrics that may change or be removed in future versions"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"BETA"),": Metrics that are feature-complete but may still undergo changes")),(0,o.kt)("p",null,"The stability level is indicated in the metric metadata and should be considered when building monitoring and alerting systems."),(0,o.kt)("h3",{id:"deprecation-policy"},"Deprecation Policy"),(0,o.kt)("p",null,"When metrics need to be changed or removed, Koordinator follows a deprecation policy:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Mark the metric as deprecated in the documentation"),(0,o.kt)("li",{parentName:"ol"},"Continue to expose the metric for at least two minor versions"),(0,o.kt)("li",{parentName:"ol"},"Add a warning in the logs when the deprecated metric is accessed"),(0,o.kt)("li",{parentName:"ol"},"Remove the metric in a subsequent major version")),(0,o.kt)("p",null,"This policy ensures that users have sufficient time to update their monitoring configurations before metrics are removed."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Section sources")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/koordlet/metrics/metrics.go"},"metrics.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/scheduler/metrics/metrics.go"},"metrics.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/descheduler/metrics/metrics.go"},"metrics.go")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/koordinator-sh/koordinator/tree/main/pkg/slo-controller/metrics/metrics.go"},"metrics.go"))))}m.isMDXComponent=!0}}]);